{
  "hash": "89c259057eab9913f239dc3dbd6a8aa2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 3\"\nauthor: \"Xu Haiyang\"\ndate: \"14 October, 2024\" \ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n\n# **Prototyping Modules for Geospatial Analytics Shiny Application**\n\n## **Overview**\n\nPrototyping serves as a pivotal step in application development, bridging theoretical design with practical user interaction. A well-constructed prototype validates design decisions by providing a tangible platform to test user experience (UX) elements with stakeholders. This approach helps refine the application's UX before further resources are invested, enhancing both efficiency and effectiveness.\n\n## **Prototyping for Shiny Application**\n\nIn the context of developing a **Shiny application** using **R**, prototyping plays a crucial role in defining technical requirements, testing functionality, and refining the user interface.\n\n1.  **Evaluating R Packages**: The initial step in Shiny prototyping involves identifying and validating R packages from CRAN that support the app’s functionality. This ensures the application’s foundation is reliable and compatible with the required analyses and visualizations.\n\n2.  **Testing R Code**: Prototyping also involves running and validating specific R code snippets to confirm they produce expected outputs. This testing process helps ensure a smooth experience for end-users by troubleshooting issues early.\n\n3.  **Setting Parameters and Outputs**: Deciding on the parameters and outputs to expose in the application is a key step. These will guide user interaction and determine the dynamic nature of the app.\n\n4.  **Designing the UI with Shiny Components**: The final prototyping phase involves selecting Shiny UI components that allow users to interact with the chosen parameters intuitively.\n\nThis structured approach facilitates a seamless transition from conceptual design to a fully functional application, prioritizing both technical robustness and user experience.\n\n# **Understanding Basics of Shiny**\n\n**Shiny** is an open-source R package designed to simplify the creation of interactive web applications without requiring knowledge of web design languages like HTML, CSS, or JavaScript.\n\n### **Core Components of Shiny**\n\nA Shiny application typically consists of an **`app.R`** file that includes two main sections:\n\n1.  **User Interface (UI)** - Defines the front-end layout and elements that users interact with.\n\n2.  **Server** - Contains the back-end logic, handling input-processing and output-rendering functions.\n\nThis modular structure keeps the UI and server functions distinct, ensuring a clean, organized codebase.\n\n### **UI Layout in Shiny**\n\nThe Shiny UI includes components like:\n\n1.  **Header Panel** (`headerPanel`): Displays the app’s title or brief descriptions.\n\n2.  **Sidebar Panel** (`sidebarPanel`): A vertical panel for input controls, offering users a way to interact with the app.\n\n3.  **Main Panel** (`mainPanel`): The primary area for output displays (e.g., maps, plots, tables).\n\n### **Flexible Layout with FluidRow and Column**\n\nShiny employs a grid layout system through `fluidRow()` and `column()`, based on a 12-column structure, allowing flexible UI design. Each `fluidRow` can hold multiple `column` elements, enabling a variety of layouts by adjusting column widths.\n\n### **Navbar Pages for Organized Layouts**\n\nTo structure complex applications, **`navbarPage()`** is available, enabling multiple sub-components within the app, each with distinct sidebar, tabset, or layout configurations.\n\n### **User Inputs and Controls in Sidebar Panel**\n\nShiny provides various functions for defining user inputs, such as:\n\n-   **`sliderInput()`**: Creates a slider for range-based input.\n\n-   **`selectInput()`**: Generates a dropdown list.\n\n-   **`textInput()`**: Adds a text box for user input.\n\n-   **`numericInput()`**: Allows users to enter numeric values.\n\n-   **`checkboxInput()` & `checkboxGroupInput()`**: Useful for binary or multiple-choice selections.\n\nAfter configuring inputs, **`submitButton()`** compiles and sends inputs to the server, updating outputs accordingly.\n\n### **Outputs in Main Panel**\n\nOutputs are defined in the main panel with placeholders like:\n\n-   **`textOutput()`**, **`tableOutput()`**, and **`plotOutput()`**.\n\n-   Rendered on the UI via corresponding functions (`renderText`, `renderTable`, `renderPlot`), these components can be customized using `fluidRow()` and `column()`.\n\n### **Organizing Outputs with Tabsets**\n\nTo segment content in the main panel, **`tabsetPanel()`** creates a series of tabs, helping organize multiple outputs within the application.\n\n### **Server Component**\n\nThe server function processes inputs from the UI and defines outputs based on input values. It typically includes parameters for:\n\n-   **Input**: Accesses user-specified UI inputs.\n\n-   **Output**: Dictates output displays on the UI.\n\n-   **Session** (optional): Manages session-specific settings.\n\nThe **UI and server interaction** is a two-way communication loop, where inputs from the UI are processed by the server, and the resulting outputs are displayed back on the UI.\n\n# **Analysing R-Packages**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n```\n:::\n\n\n\nThis line uses `pacman::p_load` to load all necessary packages in one command, ensuring that all packages required for data manipulation, visualization, clustering, and spatial analysis are ready for use.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_geo <- st_read(dsn = \"data/geospatial/DiaphanTinh\", layer = \"Dia_phan_Tinh\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Dia_phan_Tinh' from data source \n  `C:\\EasonXu-HY99\\IS415\\Take-Home_Ex\\Take-Home_Ex03\\data\\geospatial\\DiaphanTinh' \n  using driver `ESRI Shapefile'\nSimple feature collection with 63 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 102.1421 ymin: 6.953306 xmax: 116.9473 ymax: 23.3939\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(vietnam_geo, \"data/rds/vietnam_geo.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(vietnam_geo)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 63\nColumns: 3\n$ Code     <chr> \"AD01\", \"AD01\", \"AD01\", \"AD01\", \"AD01\", \"AD01\", \"AD01\", \"AD01…\n$ Name     <chr> \"An Giang\", \"Ba Ria - Vung Tau\", \"Bac Giang\", \"Bac Kan\", \"Bac…\n$ geometry <MULTIPOLYGON [°]> MULTIPOLYGON (((105.1152 10..., MULTIPOLYGON (((…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms <- read_csv(\"data/aspatial/farms.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 69 Columns: 61\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (50): Cities, provincies, 2012 Total, 2012 Cultivation farm, 2012 Livest...\ndbl (11): 2014 Total, 2015 Total, 2015 Livestock farm, 2016 Total, 2016 Live...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(farms)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Cities, provincies  2012 Total        2012 Cultivation farm\n Length:69          Length:69          Length:69            \n Class :character   Class :character   Class :character     \n Mode  :character   Mode  :character   Mode  :character     \n                                                            \n                                                            \n                                                            \n 2012 Livestock farm 2012 Fishing farm  2012 Others(*)      2013 Total       \n Length:69           Length:69          Length:69          Length:69         \n Class :character    Class :character   Class :character   Class :character  \n Mode  :character    Mode  :character   Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n 2013 Cultivation farm 2013 Livestock farm 2013 Fishing farm \n Length:69             Length:69           Length:69         \n Class :character      Class :character    Class :character  \n Mode  :character      Mode  :character    Mode  :character  \n                                                             \n                                                             \n                                                             \n 2013 Others(*)       2014 Total     2014 Cultivation farm 2014 Livestock farm\n Length:69          Min.   :   1.0   Length:69             Length:69          \n Class :character   1st Qu.:  61.0   Class :character      Class :character   \n Mode  :character   Median : 361.0   Mode  :character      Mode  :character   \n                    Mean   : 785.9                                            \n                    3rd Qu.: 697.0                                            \n                    Max.   :7599.0                                            \n 2014 Fishing farm  2014 Others(*)       2015 Total     2015 Cultivation farm\n Length:69          Length:69          Min.   :   1.0   Length:69            \n Class :character   Class :character   1st Qu.:  71.0   Class :character     \n Mode  :character   Mode  :character   Median : 370.0   Mode  :character     \n                                       Mean   : 851.9                        \n                                       3rd Qu.: 710.0                        \n                                       Max.   :7347.0                        \n 2015 Livestock farm 2015 Fishing farm  2015 Others(*)       2016 Total    \n Min.   :   1.0      Length:69          Length:69          Min.   :   1.0  \n 1st Qu.:  32.0      Class :character   Class :character   1st Qu.: 107.0  \n Median : 105.0      Mode  :character   Mode  :character   Median : 453.0  \n Mean   : 436.8                                            Mean   : 970.7  \n 3rd Qu.: 501.0                                            3rd Qu.: 927.0  \n Max.   :5998.0                                            Max.   :9946.0  \n 2016 Cultivation farm 2016 Livestock farm 2016 Fishing farm \n Length:69             Min.   :   1.0      Length:69         \n Class :character      1st Qu.:  43.0      Class :character  \n Mode  :character      Median : 124.0      Mode  :character  \n                       Mean   : 604.9                        \n                       3rd Qu.: 593.0                        \n                       Max.   :8726.0                        \n 2016 Others(*)       2017 Total      2017 Cultivation farm 2017 Livestock farm\n Length:69          Min.   :    1.0   Length:69             Min.   :   1.0     \n Class :character   1st Qu.:  114.0   Class :character      1st Qu.:  46.0     \n Mode  :character   Median :  466.0   Mode  :character      Median : 130.0     \n                    Mean   :  986.9                         Mean   : 613.3     \n                    3rd Qu.:  960.0                         3rd Qu.: 618.0     \n                    Max.   :10120.0                         Max.   :8841.0     \n 2017 Fishing farm  2017 Others(*)       2018 Total     2018 Cultivation farm\n Length:69          Length:69          Min.   :   1.0   Length:69            \n Class :character   Class :character   1st Qu.: 113.0   Class :character     \n Mode  :character   Mode  :character   Median : 447.0   Mode  :character     \n                                       Mean   : 917.9                        \n                                       3rd Qu.: 846.0                        \n                                       Max.   :9192.0                        \n 2018 Livestock farm 2018 Fishing farm  2018 Others(*)       2019 Total    \n Min.   :   1.0      Length:69          Length:69          Min.   :   2.0  \n 1st Qu.:  43.0      Class :character   Class :character   1st Qu.: 114.0  \n Median : 150.0      Mode  :character   Mode  :character   Median : 447.0  \n Mean   : 569.2                                            Mean   : 936.6  \n 3rd Qu.: 580.0                                            3rd Qu.: 861.0  \n Max.   :7882.0                                            Max.   :9593.0  \n 2019 Cultivation farm 2019 Livestock farm 2019 Fishing farm \n Length:69             Min.   :   1.0      Length:69         \n Class :character      1st Qu.:  45.0      Class :character  \n Mode  :character      Median : 156.0      Mode  :character  \n                       Mean   : 588.7                        \n                       3rd Qu.: 580.0                        \n                       Max.   :8180.0                        \n 2019 Others(*)      2020 Total        2020 Cultivation farm\n Length:69          Length:69          Length:69            \n Class :character   Class :character   Class :character     \n Mode  :character   Mode  :character   Mode  :character     \n                                                            \n                                                            \n                                                            \n 2020 Livestock farm 2020 Fishing farm  2020 Others(*)      2021 Total       \n Length:69           Length:69          Length:69          Length:69         \n Class :character    Class :character   Class :character   Class :character  \n Mode  :character    Mode  :character   Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n 2021 Cultivation farm 2021 Livestock farm 2021 Fishing farm \n Length:69             Length:69           Length:69         \n Class :character      Class :character    Class :character  \n Mode  :character      Mode  :character    Mode  :character  \n                                                             \n                                                             \n                                                             \n 2021 Others(*)      2022 Total        2022 Cultivation farm\n Length:69          Length:69          Length:69            \n Class :character   Class :character   Class :character     \n Mode  :character   Mode  :character   Mode  :character     \n                                                            \n                                                            \n                                                            \n 2022 Livestock farm 2022 Fishing farm  2022 Others(*)      2023 Total       \n Length:69           Length:69          Length:69          Length:69         \n Class :character    Class :character   Class :character   Class :character  \n Mode  :character    Mode  :character   Mode  :character   Mode  :character  \n                                                                             \n                                                                             \n                                                                             \n 2023 Cultivation farm 2023 Livestock farm 2023 Fishing farm \n Length:69             Length:69           Length:69         \n Class :character      Class :character    Class :character  \n Mode  :character      Mode  :character    Mode  :character  \n                                                             \n                                                             \n                                                             \n 2023 Others(*)    \n Length:69         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nenterprise <- read_csv(\"data/aspatial/enterprise.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 69 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Cities, provincies\ndbl (8): 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms <- farms %>%\n  mutate(`Cities, provincies` = str_trim(`Cities, provincies`)) %>%\n  filter(!`Cities, provincies` %in% c(\n    \"Red River Delta\", \"Northern midlands and mountain areas\", \n    \"Northern Central area and Central coastal area\", \"Central Highlands\", \n    \"South East\", \"Mekong River Delta\"\n  )) %>%\n  mutate(`Cities, provincies` = case_when(\n    `Cities, provincies` == \"Ho Chi Minh city\" ~ \"TP. Ho Chi Minh\",\n    `Cities, provincies` == \"Thai  Nguyen\" ~ \"Thai Nguyen\",\n    `Cities, provincies` == \"Thua Thien-Hue\" ~ \"Thua Thien - Hue\",\n    `Cities, provincies` == \"Quang  Nam\" ~ \"Quang Nam\",\n    `Cities, provincies` == \"Quang  Ngai\" ~ \"Quang Ngai\",\n    `Cities, provincies` == \"Khanh  Hoa\" ~ \"Khanh Hoa\",\n    `Cities, provincies` == \"Ninh  Thuan\" ~ \"Ninh Thuan\",\n    `Cities, provincies` == \"Binh  Duong\" ~ \"Binh Duong\",\n    `Cities, provincies` == \"Kien  Giang\" ~ \"Kien Giang\",\n    TRUE ~ `Cities, provincies`\n  )) %>%\n  mutate(across(-`Cities, provincies`, ~str_replace_all(., \"\\\\.\\\\.\", \"0\"))) %>%\n  mutate(across(-`Cities, provincies`, ~suppressWarnings(as.numeric(.))))\n\nprint(farms)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 61\n   `Cities, provincies` `2012 Total` `2012 Cultivation farm`\n   <chr>                       <dbl>                   <dbl>\n 1 Ha Noi                       1233                      11\n 2 Vinh Phuc                     508                       0\n 3 Bac Ninh                       74                       0\n 4 Quang Ninh                    141                       4\n 5 Hai Duong                     506                       3\n 6 Hai Phong                     421                       1\n 7 Hung Yen                      353                       4\n 8 Thai Binh                     600                       4\n 9 Ha Nam                        240                       6\n10 Nam Dinh                      366                       2\n# ℹ 53 more rows\n# ℹ 58 more variables: `2012 Livestock farm` <dbl>, `2012 Fishing farm` <dbl>,\n#   `2012 Others(*)` <dbl>, `2013 Total` <dbl>, `2013 Cultivation farm` <dbl>,\n#   `2013 Livestock farm` <dbl>, `2013 Fishing farm` <dbl>,\n#   `2013 Others(*)` <dbl>, `2014 Total` <dbl>, `2014 Cultivation farm` <dbl>,\n#   `2014 Livestock farm` <dbl>, `2014 Fishing farm` <dbl>,\n#   `2014 Others(*)` <dbl>, `2015 Total` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\nThis segment cleans and standardizes province names in `farms`, trimming whitespace and correcting inconsistent naming conventions (e.g., replacing \"Ho Chi Minh city\" with \"TP. Ho Chi Minh\"). It also removes rows representing regions rather than specific provinces. Missing values, represented as `..`, are replaced with `0` to facilitate calculations, and remaining non-province columns are converted to numeric format to avoid errors in numeric operations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(farms, \"data/rds/farms.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- farms %>%\n  select(starts_with(\"2012\"), starts_with(\"2013\"), starts_with(\"2014\"), starts_with(\"2015\"),\n         starts_with(\"2016\"), starts_with(\"2017\"), starts_with(\"2018\"), starts_with(\"2019\"),\n         starts_with(\"2020\"), starts_with(\"2021\"), starts_with(\"2022\"), starts_with(\"2023\")) %>%\n  summary()\n\nprint(\"Summary Statistics:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary Statistics:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   2012 Total     2012 Cultivation farm 2012 Livestock farm 2012 Fishing farm\n Min.   :   0.0   Min.   :   0.0        Min.   :   0.0      Min.   :   0.00  \n 1st Qu.:  33.0   1st Qu.:   1.0        1st Qu.:   9.0      1st Qu.:   0.00  \n Median : 141.0   Median :   6.0        Median :  38.0      Median :  11.00  \n Mean   : 359.6   Mean   : 140.7        Mean   : 129.1      Mean   :  74.92  \n 3rd Qu.: 507.0   3rd Qu.: 116.5        3rd Qu.: 168.5      3rd Qu.:  31.50  \n Max.   :3589.0   Max.   :1280.0        Max.   :1172.0      Max.   :2959.00  \n 2012 Others(*)     2013 Total     2013 Cultivation farm 2013 Livestock farm\n Min.   :  0.00   Min.   :   0.0   Min.   :   0.0        Min.   :   0.0     \n 1st Qu.:  0.00   1st Qu.:  38.0   1st Qu.:   0.5        1st Qu.:  14.0     \n Median :  2.00   Median : 212.0   Median :   5.0        Median :  45.0     \n Mean   : 14.94   Mean   : 377.4   Mean   : 138.8        Mean   : 146.1     \n 3rd Qu.:  8.00   3rd Qu.: 546.0   3rd Qu.: 113.5        3rd Qu.: 194.0     \n Max.   :199.00   Max.   :3536.0   Max.   :1197.0        Max.   :1329.0     \n 2013 Fishing farm 2013 Others(*)     2014 Total     2014 Cultivation farm\n Min.   :   0.00   Min.   :  0.00   Min.   :   1.0   Min.   :  0.0        \n 1st Qu.:   0.00   1st Qu.:  0.00   1st Qu.:  55.5   1st Qu.:  0.5        \n Median :   9.00   Median :  3.00   Median : 286.0   Median :  8.0        \n Mean   :  74.44   Mean   : 17.98   Mean   : 430.4   Mean   :141.8        \n 3rd Qu.:  33.00   3rd Qu.: 15.00   3rd Qu.: 607.0   3rd Qu.:143.5        \n Max.   :2917.00   Max.   :195.00   Max.   :3479.0   Max.   :965.0        \n 2014 Livestock farm 2014 Fishing farm 2014 Others(*)     2015 Total    \n Min.   :   0.0      Min.   :   0.00   Min.   :  0.00   Min.   :   1.0  \n 1st Qu.:  18.0      1st Qu.:   0.00   1st Qu.:  1.00   1st Qu.:  66.5  \n Median :  72.0      Median :   7.00   Median :  3.00   Median : 298.0  \n Mean   : 200.7      Mean   :  73.71   Mean   : 14.17   Mean   : 466.5  \n 3rd Qu.: 270.0      3rd Qu.:  36.50   3rd Qu.: 14.50   3rd Qu.: 666.0  \n Max.   :2099.0      Max.   :2927.00   Max.   :193.00   Max.   :3055.0  \n 2015 Cultivation farm 2015 Livestock farm 2015 Fishing farm 2015 Others(*)  \n Min.   :  0.0         Min.   :   1.0      Min.   :   0.00   Min.   :  0.00  \n 1st Qu.:  0.5         1st Qu.:  25.0      1st Qu.:   0.00   1st Qu.:  1.00  \n Median :  9.0         Median :  80.0      Median :   7.00   Median :  3.00  \n Mean   :145.7         Mean   : 239.2      Mean   :  66.27   Mean   : 15.37  \n 3rd Qu.:137.0         3rd Qu.: 328.0      3rd Qu.:  29.50   3rd Qu.: 14.00  \n Max.   :990.0         Max.   :2578.0      Max.   :2414.00   Max.   :205.00  \n   2016 Total     2016 Cultivation farm 2016 Livestock farm 2016 Fishing farm\n Min.   :   1.0   Min.   :   0.0        Min.   :   1.0      Min.   :  0.0    \n 1st Qu.: 100.0   1st Qu.:   1.0        1st Qu.:  41.0      1st Qu.:  1.0    \n Median : 319.0   Median :  13.0        Median : 115.0      Median :  9.0    \n Mean   : 531.6   Mean   : 146.3        Mean   : 331.3      Mean   : 37.3    \n 3rd Qu.: 866.5   3rd Qu.: 124.0        3rd Qu.: 402.5      3rd Qu.: 32.0    \n Max.   :3811.0   Max.   :1140.0        Max.   :3383.0      Max.   :336.0    \n 2016 Others(*)     2017 Total     2017 Cultivation farm 2017 Livestock farm\n Min.   :  0.00   Min.   :   1.0   Min.   :   0.0        Min.   :   1.0     \n 1st Qu.:  1.00   1st Qu.: 108.0   1st Qu.:   1.0        1st Qu.:  44.5     \n Median :  4.00   Median : 341.0   Median :  11.0        Median : 114.0     \n Mean   : 16.71   Mean   : 540.4   Mean   : 144.4        Mean   : 335.8     \n 3rd Qu.: 10.50   3rd Qu.: 856.0   3rd Qu.: 127.5        3rd Qu.: 457.0     \n Max.   :428.00   Max.   :3830.0   Max.   :1130.0        Max.   :3373.0     \n 2017 Fishing farm 2017 Others(*)     2018 Total     2018 Cultivation farm\n Min.   :  0.0     Min.   :  0.00   Min.   :   1.0   Min.   :   0.0       \n 1st Qu.:  1.0     1st Qu.:  0.00   1st Qu.: 103.0   1st Qu.:   1.0       \n Median : 11.0     Median :  3.00   Median : 354.0   Median :  10.0       \n Mean   : 41.7     Mean   : 18.48   Mean   : 502.7   Mean   : 134.9       \n 3rd Qu.: 32.0     3rd Qu.: 13.00   3rd Qu.: 759.5   3rd Qu.: 126.0       \n Max.   :336.0     Max.   :452.00   Max.   :3261.0   Max.   :1094.0       \n 2018 Livestock farm 2018 Fishing farm 2018 Others(*)     2019 Total    \n Min.   :   1.0      Min.   :  0.00    Min.   :  0.00   Min.   :   2.0  \n 1st Qu.:  42.0      1st Qu.:  1.00    1st Qu.:  0.00   1st Qu.:  98.0  \n Median : 125.0      Median :  8.00    Median :  4.00   Median : 397.0  \n Mean   : 311.7      Mean   : 37.02    Mean   : 19.02   Mean   : 512.9  \n 3rd Qu.: 426.5      3rd Qu.: 32.50    3rd Qu.: 10.50   3rd Qu.: 761.0  \n Max.   :2826.0      Max.   :347.00    Max.   :434.00   Max.   :3390.0  \n 2019 Cultivation farm 2019 Livestock farm 2019 Fishing farm 2019 Others(*)  \n Min.   :   0.0        Min.   :   1.0      Min.   :  0.00    Min.   :  0.00  \n 1st Qu.:   1.0        1st Qu.:  43.5      1st Qu.:  1.00    1st Qu.:  0.00  \n Median :  11.0        Median : 137.0      Median :  8.00    Median :  4.00  \n Mean   : 133.7        Mean   : 322.4      Mean   : 36.95    Mean   : 19.92  \n 3rd Qu.: 128.0        3rd Qu.: 440.5      3rd Qu.: 33.50    3rd Qu.: 10.00  \n Max.   :1098.0        Max.   :2955.0      Max.   :347.00    Max.   :434.00  \n   2020 Total     2020 Cultivation farm 2020 Livestock farm 2020 Fishing farm\n Min.   :   0.0   Min.   :  0.0         Min.   :   0.0      Min.   :  0.00   \n 1st Qu.:  86.5   1st Qu.:  3.0         1st Qu.:  23.5      1st Qu.:  0.00   \n Median : 261.0   Median : 19.0         Median :  91.0      Median :  9.00   \n Mean   : 375.6   Mean   :104.8         Mean   : 218.3      Mean   : 43.02   \n 3rd Qu.: 536.0   3rd Qu.:112.5         3rd Qu.: 228.5      3rd Qu.: 37.50   \n Max.   :2377.0   Max.   :903.0         Max.   :1741.0      Max.   :536.00   \n 2020 Others(*)     2021 Total     2021 Cultivation farm 2021 Livestock farm\n Min.   : 0.000   Min.   :   0.0   Min.   :  0.0         Min.   :   0.0     \n 1st Qu.: 0.000   1st Qu.:  90.0   1st Qu.:  3.0         1st Qu.:  31.0     \n Median : 2.000   Median : 254.0   Median : 20.0         Median : 101.0     \n Mean   : 9.444   Mean   : 377.3   Mean   :103.4         Mean   : 218.2     \n 3rd Qu.:10.000   3rd Qu.: 535.0   3rd Qu.:115.0         3rd Qu.: 237.0     \n Max.   :89.000   Max.   :2160.0   Max.   :897.0         Max.   :1740.0     \n 2021 Fishing farm 2021 Others(*)     2022 Total     2022 Cultivation farm\n Min.   :  0.00    Min.   :  0.00   Min.   :   0.0   Min.   :  0.0        \n 1st Qu.:  0.50    1st Qu.:  0.00   1st Qu.:  93.0   1st Qu.:  3.0        \n Median : 10.00    Median :  2.00   Median : 274.0   Median : 22.0        \n Mean   : 44.65    Mean   : 11.05   Mean   : 382.1   Mean   :100.1        \n 3rd Qu.: 39.50    3rd Qu.:  9.00   3rd Qu.: 542.5   3rd Qu.:115.0        \n Max.   :608.00    Max.   :103.00   Max.   :2032.0   Max.   :892.0        \n 2022 Livestock farm 2022 Fishing farm 2022 Others(*)     2023 Total    \n Min.   :   0.0      Min.   :  0.00    Min.   :  0.00   Min.   :   0.0  \n 1st Qu.:  29.0      1st Qu.:  0.50    1st Qu.:  0.00   1st Qu.:  94.0  \n Median : 104.0      Median :  9.00    Median :  2.00   Median : 284.0  \n Mean   : 223.6      Mean   : 46.67    Mean   : 11.81   Mean   : 395.8  \n 3rd Qu.: 244.5      3rd Qu.: 51.00    3rd Qu.: 10.50   3rd Qu.: 610.0  \n Max.   :1752.0      Max.   :624.00    Max.   :104.00   Max.   :1966.0  \n 2023 Cultivation farm 2023 Livestock farm 2023 Fishing farm 2023 Others(*)  \n Min.   :  0.0         Min.   :   0.0      Min.   :  0.00    Min.   :  0.00  \n 1st Qu.:  2.5         1st Qu.:  28.0      1st Qu.:  0.00    1st Qu.:  0.00  \n Median : 20.0         Median :  97.0      Median :  9.00    Median :  4.00  \n Mean   :113.1         Mean   : 222.8      Mean   : 47.06    Mean   : 12.86  \n 3rd Qu.:110.0         3rd Qu.: 262.5      3rd Qu.: 56.00    3rd Qu.: 10.50  \n Max.   :922.0         Max.   :1751.0      Max.   :677.00    Max.   :114.00  \n```\n\n\n:::\n:::\n\n\n\nThis code calculates and prints summary statistics for columns associated with the years 2012 through 2023. This gives a quick, aggregated view of each year’s data, providing insight into distributions and highlighting potential outliers or trends over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms <- farms %>%\n  mutate(`2012 Cultivation PR` = `2012 Cultivation farm` / `2012 Total` * 1000,\n         `2012 Livestock PR` = `2012 Livestock farm` / `2012 Total` * 1000,\n         `2012 Fishing PR` = `2012 Fishing farm` / `2012 Total` * 1000,\n         `2012 Others PR` = `2012 Others(*)` / `2012 Total` * 1000) %>%\n  mutate(`2013 Cultivation PR` = `2013 Cultivation farm` / `2013 Total` * 1000,\n         `2013 Livestock PR` = `2013 Livestock farm` / `2013 Total` * 1000,\n         `2013 Fishing PR` = `2013 Fishing farm` / `2013 Total` * 1000,\n         `2013 Others PR` = `2013 Others(*)` / `2013 Total` * 1000) %>%\n  mutate(`2014 Cultivation PR` = `2014 Cultivation farm` / `2014 Total` * 1000,\n         `2014 Livestock PR` = `2014 Livestock farm` / `2014 Total` * 1000,\n         `2014 Fishing PR` = `2014 Fishing farm` / `2014 Total` * 1000,\n         `2014 Others PR` = `2014 Others(*)` / `2014 Total` * 1000) %>%\n  mutate(`2015 Cultivation PR` = `2015 Cultivation farm` / `2015 Total` * 1000,\n         `2015 Livestock PR` = `2015 Livestock farm` / `2015 Total` * 1000,\n         `2015 Fishing PR` = `2015 Fishing farm` / `2015 Total` * 1000,\n         `2015 Others PR` = `2015 Others(*)` / `2015 Total` * 1000) %>%\n  mutate(`2016 Cultivation PR` = `2016 Cultivation farm` / `2016 Total` * 1000,\n         `2016 Livestock PR` = `2016 Livestock farm` / `2016 Total` * 1000,\n         `2016 Fishing PR` = `2016 Fishing farm` / `2016 Total` * 1000,\n         `2016 Others PR` = `2016 Others(*)` / `2016 Total` * 1000) %>%\n  mutate(`2017 Cultivation PR` = `2017 Cultivation farm` / `2017 Total` * 1000,\n         `2017 Livestock PR` = `2017 Livestock farm` / `2017 Total` * 1000,\n         `2017 Fishing PR` = `2017 Fishing farm` / `2017 Total` * 1000,\n         `2017 Others PR` = `2017 Others(*)` / `2017 Total` * 1000) %>%\n  mutate(`2018 Cultivation PR` = `2018 Cultivation farm` / `2018 Total` * 1000,\n         `2018 Livestock PR` = `2018 Livestock farm` / `2018 Total` * 1000,\n         `2018 Fishing PR` = `2018 Fishing farm` / `2018 Total` * 1000,\n         `2018 Others PR` = `2018 Others(*)` / `2018 Total` * 1000) %>%\n  mutate(`2019 Cultivation PR` = `2019 Cultivation farm` / `2019 Total` * 1000,\n         `2019 Livestock PR` = `2019 Livestock farm` / `2019 Total` * 1000,\n         `2019 Fishing PR` = `2019 Fishing farm` / `2019 Total` * 1000,\n         `2019 Others PR` = `2019 Others(*)` / `2019 Total` * 1000) %>%\n  mutate(`2020 Cultivation PR` = `2020 Cultivation farm` / `2020 Total` * 1000,\n         `2020 Livestock PR` = `2020 Livestock farm` / `2020 Total` * 1000,\n         `2020 Fishing PR` = `2020 Fishing farm` / `2020 Total` * 1000,\n         `2020 Others PR` = `2020 Others(*)` / `2020 Total` * 1000) %>%\n  mutate(`2021 Cultivation PR` = `2021 Cultivation farm` / `2021 Total` * 1000,\n         `2021 Livestock PR` = `2021 Livestock farm` / `2021 Total` * 1000,\n         `2021 Fishing PR` = `2021 Fishing farm` / `2021 Total` * 1000,\n         `2021 Others PR` = `2021 Others(*)` / `2021 Total` * 1000) %>%\n  mutate(`2022 Cultivation PR` = `2022 Cultivation farm` / `2022 Total` * 1000,\n         `2022 Livestock PR` = `2022 Livestock farm` / `2022 Total` * 1000,\n         `2022 Fishing PR` = `2022 Fishing farm` / `2022 Total` * 1000,\n         `2022 Others PR` = `2022 Others(*)` / `2022 Total` * 1000) %>%\n  mutate(`2023 Cultivation PR` = `2023 Cultivation farm` / `2023 Total` * 1000,\n         `2023 Livestock PR` = `2023 Livestock farm` / `2023 Total` * 1000,\n         `2023 Fishing PR` = `2023 Fishing farm` / `2023 Total` * 1000,\n         `2023 Others PR` = `2023 Others(*)` / `2023 Total` * 1000)\n```\n:::\n\n\n\nIn this part, proportion ratios for various farm types (Cultivation, Livestock, Fishing, and Others) are calculated for each year, relative to the total farms. Scaling each type per 1,000 total farms allows us to compare regions with different total farm sizes on an equal footing, making it possible to see the proportionate focus of each province’s farming sector over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenterprise <- enterprise %>%\n  mutate(`Cities, provincies` = str_trim(`Cities, provincies`)) %>%\n  filter(!`Cities, provincies` %in% c(\n    \"Red River Delta\", \"Northern midlands and mountain areas\", \n    \"Northern Central area and Central coastal area\", \"Central Highlands\", \n    \"South East\", \"Mekong River Delta\"\n  )) %>%\n  mutate(`Cities, provincies` = case_when(\n    `Cities, provincies` == \"Ho Chi Minh city\" ~ \"TP. Ho Chi Minh\",\n    `Cities, provincies` == \"Thai  Nguyen\" ~ \"Thai Nguyen\",\n    `Cities, provincies` == \"Thua Thien-Hue\" ~ \"Thua Thien - Hue\",\n    `Cities, provincies` == \"Quang  Nam\" ~ \"Quang Nam\",\n    `Cities, provincies` == \"Quang  Ngai\" ~ \"Quang Ngai\",\n    `Cities, provincies` == \"Khanh  Hoa\" ~ \"Khanh Hoa\",\n    `Cities, provincies` == \"Ninh  Thuan\" ~ \"Ninh Thuan\",\n    `Cities, provincies` == \"Binh  Duong\" ~ \"Binh Duong\",\n    `Cities, provincies` == \"Kien  Giang\" ~ \"Kien Giang\",\n    TRUE ~ `Cities, provincies`\n  )) %>%\n  mutate(across(-`Cities, provincies`, ~str_replace_all(., \"\\\\.\\\\.\", \"0\"))) %>%\n  mutate(across(-`Cities, provincies`, ~suppressWarnings(as.numeric(.))))\n\nprint(enterprise)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 9\n   `Cities, provincies` `2016` `2017` `2018` `2019` `2020` `2021` `2022` `2023`\n   <chr>                 <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 Ha Noi                22663  24545  25231  27711  26135  24026  29720  31512\n 2 Vinh Phuc               857   1250   1145   1194   1249   1214   1377   1523\n 3 Bac Ninh               1660   2046   2041   2405   2390   2368   2700   3473\n 4 Quang Ninh             1254   1593   1654   1605   1456   1455   1643   1689\n 5 Hai Duong              1213   1509   1549   1695   1600   1425   1579   1884\n 6 Hai Phong              2568   2979   3145   2943   2867   3034   3294   3523\n 7 Hung Yen                903   1311   1185   1194   1153   1331   1364   1594\n 8 Thai Binh               631    776    825    890    714    847   1130   1245\n 9 Ha Nam                  481    628    596    684    682    666    796    771\n10 Nam Dinh                675    799    818    796    794    906   1088   1283\n# ℹ 53 more rows\n```\n\n\n:::\n:::\n\n\n\nThis segment cleans and standardizes province names in `enterprise`, trimming whitespace and correcting inconsistent naming conventions (e.g., replacing \"Ho Chi Minh city\" with \"TP. Ho Chi Minh\"). It also removes rows that represent regions rather than specific provinces, ensuring a focus on individual provincial data. Missing values, represented as \"..\", are replaced with 0 to enable smooth calculations, and all non-province columns are converted to numeric format to prevent errors in numeric operations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(enterprise, \"data/rds/enterprise.rds\")\n```\n:::\n\n\n\n## **Exploratory Data Analysis (EDA)**\n\nWhen designing the Shiny UI, I plan to include the variable \"type of farm,\" allowing users to explore the agricultural data across different years and farm types interactively.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplots_list <- list()\n\nfor (year in 2012:2023) {\n  p <- ggplot(farms, aes_string(x = paste0(\"`\", year, \" Cultivation farm`\"))) +\n    geom_histogram(fill = \"skyblue\", color = \"black\") +\n    ggtitle(paste(year)) +\n    theme_minimal()\n  \n  plots_list[[as.character(year)]] <- p\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `aes_string()` was deprecated in ggplot2 3.0.0.\nℹ Please use tidy evaluation idioms with `aes()`.\nℹ See also `vignette(\"ggplot2-in-packages\")` for more information.\n```\n\n\n:::\n\n```{.r .cell-code}\narranged_plot <- ggarrange(\n  plots_list[[\"2012\"]], plots_list[[\"2013\"]], plots_list[[\"2014\"]],\n  plots_list[[\"2015\"]], plots_list[[\"2016\"]], plots_list[[\"2017\"]],\n  plots_list[[\"2018\"]], plots_list[[\"2019\"]], plots_list[[\"2020\"]],\n  plots_list[[\"2021\"]], plots_list[[\"2022\"]], plots_list[[\"2023\"]],\n  ncol = 4, nrow = 3\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(arranged_plot)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\nThis code generates yearly histograms of \"Cultivation farms\" from 2012 to 2023, arranged in a grid layout. In the Shiny design, I will present these histograms, allowing users to explore the distribution of cultivation farms each year. Users will be able to select different years and compare the frequency distribution of cultivation farm counts over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplots_list <- list()\n\nfor (year in 2016:2023) {\n  p <- ggplot(enterprise, aes_string(x = paste0(\"`\", year, \"`\"))) +\n    geom_histogram(fill = \"skyblue\", color = \"black\") +\n    ggtitle(paste(year)) +\n    theme_minimal()\n  \n  plots_list[[as.character(year)]] <- p\n}\n\narranged_plot <- ggarrange(\n  plots_list[[\"2016\"]], plots_list[[\"2017\"]],\n  plots_list[[\"2018\"]], plots_list[[\"2019\"]], plots_list[[\"2020\"]],\n  plots_list[[\"2021\"]], plots_list[[\"2022\"]], plots_list[[\"2023\"]],\n  ncol = 4, nrow = 2\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n```{.r .cell-code}\nfinal_plot <- annotate_figure(\n  arranged_plot,\n  top = text_grob(\"Number of Newly Established Enterprises (2016-2023)\", \n                  face = \"bold\", size = 14)\n)\n\nprint(final_plot)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nThis code generates histograms for each year from 2016 to 2023, showing the distribution of newly established enterprises. It first iterates through each year, creating a histogram with `ggplot` and saving it in `plots_list`. Each plot represents a single year’s distribution, with a consistent color scheme and minimalist styling.\n\nThis enterprise data is displayed alongside the farm histogram to allow comparison between farm and enterprise development over the years, suggesting other avenues of growth. In Shiny, I’ll add enterprise as a selection option, enabling users to toggle between enterprise and farm data and explore shifts in development focus across time. This approach helps users visually assess potential transitions from agriculture to enterprise-based growth in each province.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms %>%\n  select(`2012 Cultivation farm`, `2013 Cultivation farm`, `2014 Cultivation farm`, \n         `2015 Cultivation farm`, `2016 Cultivation farm`, `2017 Cultivation farm`, \n         `2018 Cultivation farm`, `2019 Cultivation farm`, `2020 Cultivation farm`, \n         `2021 Cultivation farm`, `2022 Cultivation farm`, `2023 Cultivation farm`) %>%\n  pivot_longer(cols = everything(), names_to = \"Year\", values_to = \"Cultivation_Farms\") %>%\n  mutate(Year = gsub(\" Cultivation farm\", \"\", Year)) %>%  \n  ggplot(aes(x = Year, y = Cultivation_Farms)) +\n  geom_boxplot(fill = \"orange\") +\n  ggtitle(\"Boxplot of Cultivation Farms (2012-2023)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  \n  xlab(\"Year\") + \n  ylab(\"Cultivation Farms\") %>% \n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$y\n[1] \"Cultivation Farms\"\n\nattr(,\"class\")\n[1] \"labels\"\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\nI’ll display this boxplot on the Shiny UI, with the variable \"Year\" on the x-axis and \"Cultivation Farms\" on the y-axis. This visualization allows users to explore the distribution of cultivation farms over time, observing any changes in median values, variability, and outliers. Users can get insights into how cultivation has varied from year to year.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenterprise %>%\n  pivot_longer(cols = `2016`:`2023`, names_to = \"Year\", values_to = \"Value\") %>%\n  ggplot(aes(x = Year, y = Value)) +\n  geom_boxplot(fill = \"orange\") +\n  ggtitle(\"Number of Newly Established Enterprises (2016-2023)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  xlab(\"Year\") +\n  ylab(\"Number of Enterprises\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\nPositioning this enterprise boxplot alongside the farm boxplot in the Shiny app allows users to explore shifts in growth focus, comparing farm versus enterprise development over time. By including enterprise as a selectable option in the Shiny UI, users can toggle between the two datasets to observe and analyze trends, discovering insights into how regional development may be evolving from agriculture to business establishment in recent years.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplots_list <- list()\n\nfor (year in 2012:2023) {\n  p <- ggplot(farms, aes_string(x = paste0(\"`\", year, \" Cultivation PR`\"))) +\n    geom_histogram(fill = \"skyblue\", color = \"black\") +\n    ggtitle(paste(year)) +\n    theme_minimal()\n  \n  plots_list[[as.character(year)]] <- p\n}\n\narranged_plot <- ggarrange(\n  plots_list[[\"2012\"]], plots_list[[\"2013\"]], plots_list[[\"2014\"]],\n  plots_list[[\"2015\"]], plots_list[[\"2016\"]], plots_list[[\"2017\"]],\n  plots_list[[\"2018\"]], plots_list[[\"2019\"]], plots_list[[\"2020\"]],\n  plots_list[[\"2021\"]], plots_list[[\"2022\"]], plots_list[[\"2023\"]],\n  ncol = 4, nrow = 3\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(arranged_plot)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\nIn Shiny, I’ll present these histograms of \"Cultivation PR\" (proportion per 1,000 farms) for each year from 2012 to 2023, enabling users to explore the cultivation farm proportion. By examining these histograms, users can see how the cultivation intensity varied year by year, which can highlight shifts in focus or growth in farming activity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(farms %>% select(contains(\"Cultivation PR\")), function(x) sum(is.na(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2012 Cultivation PR 2013 Cultivation PR 2014 Cultivation PR 2015 Cultivation PR \n                  2                   2                   0                   0 \n2016 Cultivation PR 2017 Cultivation PR 2018 Cultivation PR 2019 Cultivation PR \n                  0                   0                   0                   0 \n2020 Cultivation PR 2021 Cultivation PR 2022 Cultivation PR 2023 Cultivation PR \n                  2                   2                   2                   2 \n```\n\n\n:::\n:::\n\n\n\nThis command checks for missing values in the \"Cultivation PR\" columns, ensuring data quality before display in Shiny.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms <- farms %>%\n  mutate(across(where(is.numeric), ~replace_na(., 0)))\n```\n:::\n\n\n\nHere, I replace any remaining missing values with `0` to ensure complete and consistent data visualization within Shiny, preventing display issues with NA values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarms %>%\n  select(`2012 Cultivation PR`, `2013 Cultivation PR`, `2014 Cultivation PR`, \n         `2015 Cultivation PR`, `2016 Cultivation PR`, `2017 Cultivation PR`, \n         `2018 Cultivation PR`, `2019 Cultivation PR`, `2020 Cultivation PR`, \n         `2021 Cultivation PR`, `2022 Cultivation PR`, `2023 Cultivation PR`) %>%\n  pivot_longer(cols = everything(), names_to = \"Year\", values_to = \"Cultivation_PR\") %>%\n  mutate(Year = gsub(\" Cultivation PR\", \"\", Year)) %>%\n  ggplot(aes(x = Year, y = Cultivation_PR)) +\n  geom_boxplot(fill = \"orange\") +\n  ggtitle(\"Boxplot of Cultivation PR (2012-2023)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  xlab(\"Year\") +  \n  ylab(\"Cultivation PR (per 1000)\") %>% \n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$y\n[1] \"Cultivation PR (per 1000)\"\n\nattr(,\"class\")\n[1] \"labels\"\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\nThis boxplot for \"Cultivation PR\" will also be displayed in the Shiny app, allowing users to explore how the proportion of cultivation farms has changed over the years. With variables \"Year\" and \"Cultivation PR,\" users can observe fluctuations in farming intensity, identifying years with high or low cultivation proportions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_farm <- farms %>%\n  left_join(vietnam_geo %>% select(-Code), by = c(\"Cities, provincies\" = \"Name\"))\n\nprint(vietnam_farm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 110\n   `Cities, provincies` `2012 Total` `2012 Cultivation farm`\n   <chr>                       <dbl>                   <dbl>\n 1 Ha Noi                       1233                      11\n 2 Vinh Phuc                     508                       0\n 3 Bac Ninh                       74                       0\n 4 Quang Ninh                    141                       4\n 5 Hai Duong                     506                       3\n 6 Hai Phong                     421                       1\n 7 Hung Yen                      353                       4\n 8 Thai Binh                     600                       4\n 9 Ha Nam                        240                       6\n10 Nam Dinh                      366                       2\n# ℹ 53 more rows\n# ℹ 107 more variables: `2012 Livestock farm` <dbl>, `2012 Fishing farm` <dbl>,\n#   `2012 Others(*)` <dbl>, `2013 Total` <dbl>, `2013 Cultivation farm` <dbl>,\n#   `2013 Livestock farm` <dbl>, `2013 Fishing farm` <dbl>,\n#   `2013 Others(*)` <dbl>, `2014 Total` <dbl>, `2014 Cultivation farm` <dbl>,\n#   `2014 Livestock farm` <dbl>, `2014 Fishing farm` <dbl>,\n#   `2014 Others(*)` <dbl>, `2015 Total` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\nBy joining `farms` with `vietnam_geo` on matching province names, I create `vietnam_farm`, a comprehensive dataset combining both geographic and farm data. This joined dataset will be essential for displaying farm data across provinces on the Shiny map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(vietnam_farm, \"data/rds/vietnam_farm.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_enterprise <- enterprise %>%\n  left_join(vietnam_geo %>% select(-Code), by = c(\"Cities, provincies\" = \"Name\"))\n\nprint(vietnam_enterprise)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 63 × 10\n   `Cities, provincies` `2016` `2017` `2018` `2019` `2020` `2021` `2022` `2023`\n   <chr>                 <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 Ha Noi                22663  24545  25231  27711  26135  24026  29720  31512\n 2 Vinh Phuc               857   1250   1145   1194   1249   1214   1377   1523\n 3 Bac Ninh               1660   2046   2041   2405   2390   2368   2700   3473\n 4 Quang Ninh             1254   1593   1654   1605   1456   1455   1643   1689\n 5 Hai Duong              1213   1509   1549   1695   1600   1425   1579   1884\n 6 Hai Phong              2568   2979   3145   2943   2867   3034   3294   3523\n 7 Hung Yen                903   1311   1185   1194   1153   1331   1364   1594\n 8 Thai Binh               631    776    825    890    714    847   1130   1245\n 9 Ha Nam                  481    628    596    684    682    666    796    771\n10 Nam Dinh                675    799    818    796    794    906   1088   1283\n# ℹ 53 more rows\n# ℹ 1 more variable: geometry <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_farm <- st_as_sf(vietnam_farm)\n\nqtm(vietnam_farm, \"2012 Cultivation PR\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\nThis code converts `vietnam_farm` into an `sf` spatial data frame and plots \"2012 Cultivation PR\" using `qtm`. In Shiny, this map will allow users to visually explore the cultivation farm proportion across different provinces, giving a clear geographic representation of farming intensity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(vietnam_farm) +\n  tm_polygons(c(\"2012 Total\", \"2012 Cultivation farm\"),\n              style = \"jenks\", \n              title = c(\"Total Farms in 2012\", \"Cultivation Farms in 2012\")) +\n  tm_facets(sync = TRUE, ncol = 2) +  \n  tm_legend(legend.position = c(\"right\", \"bottom\")) + \n  tm_layout(outer.margins = 0, asp = 0) \n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\nThis faceted map displays both \"Total Farms\" and \"Cultivation Farms\" for 2012, using `tm_facets` to create a synchronized side-by-side view. I’ll present these maps in Shiny to allow users to visually compare the distribution of total versus cultivation farms across provinces. This visualization, along with the option to explore variables by year, will provide a comprehensive geographic overview in the Shiny app.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_enterprise <- st_as_sf(vietnam_enterprise)\n\ntm_shape(vietnam_enterprise) +\n  tm_polygons(c(\"2016\", \"2017\"),\n              style = \"jenks\", \n              title = c(\"New Enterprises (2016)\", \"New Enterprises (2017)\")) +\n  tm_facets(sync = TRUE, ncol = 2) +  \n  tm_legend(legend.position = c(\"right\", \"bottom\")) + \n  tm_layout(outer.margins = 0, asp = 0)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\nIn Shiny, I’ll allow users to select different years to compare dynamically on a geographic map. Placed alongside farm distribution maps, these enterprise maps offer insights into potential regional shifts from agriculture to business growth. This setup lets users explore spatial differences year-to-year, revealing trends in economic development and regional focus over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenterprise_long <- enterprise %>%\n  pivot_longer(cols = `2016`:`2023`, names_to = \"Year\", values_to = \"Enterprise_Count\")\n\nenterprise_long <- enterprise_long %>%\n  mutate(Year = as.numeric(Year))\n\nggplot(data = enterprise_long, aes(x = Year, y = Enterprise_Count, color = `Cities, provincies`, group = `Cities, provincies`)) +\n  geom_line() +\n  geom_point() +\n  ggtitle(\"Trend of Enterprises Over the Years (2016-2023)\") +\n  xlab(\"Year\") +\n  ylab(\"Enterprise Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\nIn the Shiny app, users will be able to select specific provinces to view enterprise trends over time, allowing them to focus on a particular province's growth trajectory. By enabling this selection, users can explore how enterprise development has varied among provinces, revealing insights into regional economic changes. This interactive feature will enhance user engagement and allow for targeted analysis of provincial trends.\n\n## **Correlation Analysis**\n\nWhen I design the Shiny UI, I will include the variable \"year\" to allow users to analyze and interact with correlation patterns over time.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfarm_2012_pr_data <- vietnam_farm %>%\n  st_drop_geometry() %>%  \n  select(`2012 Cultivation PR`, `2012 Livestock PR`, `2012 Fishing PR`, `2012 Others PR`) %>%\n  mutate(across(everything(), as.numeric))  \n\ncolnames(farm_2012_pr_data) <- gsub(\"2012 \", \"\", colnames(farm_2012_pr_data))  \n\ncluster_vars_cor_pr <- cor(farm_2012_pr_data, use = \"complete.obs\")\n\ncorrplot.mixed(cluster_vars_cor_pr,\n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\nThis code calculates the correlation matrix for various farm types' proportions (Cultivation, Livestock, Fishing, Others) in 2012, removing geometry to focus on numeric data. Column names are cleaned to simplify variable names, and the `corrplot.mixed` function displays both numeric correlation values and ellipses, helping users easily interpret relationships between farm types. In Shiny, I’ll present this correlation plot to allow users to explore how different farming types relate to one another within a selected year.\n\n### **Data Standardisation**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_farm_ict <- vietnam_farm %>%\n  st_drop_geometry() %>%  \n  select_if(is.numeric)  \n```\n:::\n\n\n\nTo prepare for standardization, this code removes geometry and retains only numeric data from `vietnam_farm`, creating `vietnam_farm_ict`. This selection forms the base data for applying both Min-Max and Z-score standardizations, which helps in visualizing different scaling methods and their impact on distribution.\n\n### **Min-Max standardisation**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_farm.std <- normalize(vietnam_farm_ict)\n\nsummary(vietnam_farm.std)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   2012 Total       2012 Cultivation farm 2012 Livestock farm\n Min.   :0.000000   Min.   :0.0000000     Min.   :0.000000   \n 1st Qu.:0.009195   1st Qu.:0.0007813     1st Qu.:0.007679   \n Median :0.039287   Median :0.0046875     Median :0.032423   \n Mean   :0.100196   Mean   :0.1098834     Mean   :0.110149   \n 3rd Qu.:0.141265   3rd Qu.:0.0910156     3rd Qu.:0.143771   \n Max.   :1.000000   Max.   :1.0000000     Max.   :1.000000   \n 2012 Fishing farm  2012 Others(*)      2013 Total      2013 Cultivation farm\n Min.   :0.000000   Min.   :0.00000   Min.   :0.00000   Min.   :0.0000000    \n 1st Qu.:0.000000   1st Qu.:0.00000   1st Qu.:0.01075   1st Qu.:0.0004177    \n Median :0.003717   Median :0.01005   Median :0.05995   Median :0.0041771    \n Mean   :0.025320   Mean   :0.07506   Mean   :0.10672   Mean   :0.1159645    \n 3rd Qu.:0.010646   3rd Qu.:0.04020   3rd Qu.:0.15441   3rd Qu.:0.0948204    \n Max.   :1.000000   Max.   :1.00000   Max.   :1.00000   Max.   :1.0000000    \n 2013 Livestock farm 2013 Fishing farm  2013 Others(*)      2014 Total     \n Min.   :0.00000     Min.   :0.000000   Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.01053     1st Qu.:0.000000   1st Qu.:0.00000   1st Qu.:0.01567  \n Median :0.03386     Median :0.003085   Median :0.01538   Median :0.08194  \n Mean   :0.10995     Mean   :0.025521   Mean   :0.09223   Mean   :0.12346  \n 3rd Qu.:0.14597     3rd Qu.:0.011313   3rd Qu.:0.07692   3rd Qu.:0.17424  \n Max.   :1.00000     Max.   :1.000000   Max.   :1.00000   Max.   :1.00000  \n 2014 Cultivation farm 2014 Livestock farm 2014 Fishing farm \n Min.   :0.0000000     Min.   :0.000000    Min.   :0.000000  \n 1st Qu.:0.0005181     1st Qu.:0.008575    1st Qu.:0.000000  \n Median :0.0082902     Median :0.034302    Median :0.002391  \n Mean   :0.1469693     Mean   :0.095601    Mean   :0.025184  \n 3rd Qu.:0.1487047     3rd Qu.:0.128633    3rd Qu.:0.012470  \n Max.   :1.0000000     Max.   :1.000000    Max.   :1.000000  \n 2014 Others(*)       2015 Total      2015 Cultivation farm 2015 Livestock farm\n Min.   :0.000000   Min.   :0.00000   Min.   :0.0000000     Min.   :0.000000   \n 1st Qu.:0.005181   1st Qu.:0.02145   1st Qu.:0.0005051     1st Qu.:0.009313   \n Median :0.015544   Median :0.09725   Median :0.0090909     Median :0.030656   \n Mean   :0.073443   Mean   :0.15242   Mean   :0.1471541     Mean   :0.092423   \n 3rd Qu.:0.075130   3rd Qu.:0.21775   3rd Qu.:0.1383838     3rd Qu.:0.126892   \n Max.   :1.000000   Max.   :1.00000   Max.   :1.0000000     Max.   :1.000000   \n 2015 Fishing farm 2015 Others(*)       2016 Total      2016 Cultivation farm\n Min.   :0.00000   Min.   :0.000000   Min.   :0.00000   Min.   :0.0000000    \n 1st Qu.:0.00000   1st Qu.:0.004878   1st Qu.:0.02598   1st Qu.:0.0008772    \n Median :0.00290   Median :0.014634   Median :0.08346   Median :0.0114035    \n Mean   :0.02745   Mean   :0.074952   Mean   :0.13925   Mean   :0.1283208    \n 3rd Qu.:0.01222   3rd Qu.:0.068293   3rd Qu.:0.22717   3rd Qu.:0.1087719    \n Max.   :1.00000   Max.   :1.000000   Max.   :1.00000   Max.   :1.0000000    \n 2016 Livestock farm 2016 Fishing farm  2016 Others(*)       2017 Total     \n Min.   :0.00000     Min.   :0.000000   Min.   :0.000000   Min.   :0.00000  \n 1st Qu.:0.01183     1st Qu.:0.002976   1st Qu.:0.002336   1st Qu.:0.02794  \n Median :0.03371     Median :0.026786   Median :0.009346   Median :0.08880  \n Mean   :0.09765     Mean   :0.111017   Mean   :0.039052   Mean   :0.14088  \n 3rd Qu.:0.11872     3rd Qu.:0.095238   3rd Qu.:0.024533   3rd Qu.:0.22330  \n Max.   :1.00000     Max.   :1.000000   Max.   :1.000000   Max.   :1.00000  \n 2017 Cultivation farm 2017 Livestock farm 2017 Fishing farm \n Min.   :0.000000      Min.   :0.00000     Min.   :0.000000  \n 1st Qu.:0.000885      1st Qu.:0.01290     1st Qu.:0.002976  \n Median :0.009735      Median :0.03351     Median :0.032738  \n Mean   :0.127813      Mean   :0.09930     Mean   :0.124102  \n 3rd Qu.:0.112832      3rd Qu.:0.13523     3rd Qu.:0.095238  \n Max.   :1.000000      Max.   :1.00000     Max.   :1.000000  \n 2017 Others(*)       2018 Total      2018 Cultivation farm 2018 Livestock farm\n Min.   :0.000000   Min.   :0.00000   Min.   :0.0000000     Min.   :0.00000    \n 1st Qu.:0.000000   1st Qu.:0.03129   1st Qu.:0.0009141     1st Qu.:0.01451    \n Median :0.006637   Median :0.10828   Median :0.0091408     Median :0.04389    \n Mean   :0.040877   Mean   :0.15389   Mean   :0.1233133     Mean   :0.10999    \n 3rd Qu.:0.028761   3rd Qu.:0.23267   3rd Qu.:0.1151737     3rd Qu.:0.15062    \n Max.   :1.000000   Max.   :1.00000   Max.   :1.0000000     Max.   :1.00000    \n 2018 Fishing farm  2018 Others(*)       2019 Total      2019 Cultivation farm\n Min.   :0.000000   Min.   :0.000000   Min.   :0.00000   Min.   :0.0000000    \n 1st Qu.:0.002882   1st Qu.:0.000000   1st Qu.:0.02834   1st Qu.:0.0009107    \n Median :0.023055   Median :0.009217   Median :0.11659   Median :0.0100182    \n Mean   :0.106674   Mean   :0.043815   Mean   :0.15080   Mean   :0.1217220    \n 3rd Qu.:0.093660   3rd Qu.:0.024193   3rd Qu.:0.22403   3rd Qu.:0.1165756    \n Max.   :1.000000   Max.   :1.000000   Max.   :1.00000   Max.   :1.0000000    \n 2019 Livestock farm 2019 Fishing farm  2019 Others(*)       2020 Total     \n Min.   :0.00000     Min.   :0.000000   Min.   :0.000000   Min.   :0.00000  \n 1st Qu.:0.01439     1st Qu.:0.002882   1st Qu.:0.000000   1st Qu.:0.03639  \n Median :0.04604     Median :0.023055   Median :0.009217   Median :0.10980  \n Mean   :0.10880     Mean   :0.106491   Mean   :0.045900   Mean   :0.15801  \n 3rd Qu.:0.14878     3rd Qu.:0.096542   3rd Qu.:0.023041   3rd Qu.:0.22549  \n Max.   :1.00000     Max.   :1.000000   Max.   :1.000000   Max.   :1.00000  \n 2020 Cultivation farm 2020 Livestock farm 2020 Fishing farm 2020 Others(*)   \n Min.   :0.000000      Min.   :0.00000     Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.003322      1st Qu.:0.01350     1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.021041      Median :0.05227     Median :0.01679   Median :0.02247  \n Mean   :0.116103      Mean   :0.12538     Mean   :0.08025   Mean   :0.10612  \n 3rd Qu.:0.124585      3rd Qu.:0.13125     3rd Qu.:0.06996   3rd Qu.:0.11236  \n Max.   :1.000000      Max.   :1.00000     Max.   :1.00000   Max.   :1.00000  \n   2021 Total      2021 Cultivation farm 2021 Livestock farm\n Min.   :0.00000   Min.   :0.000000      Min.   :0.00000    \n 1st Qu.:0.04167   1st Qu.:0.003344      1st Qu.:0.01782    \n Median :0.11759   Median :0.022297      Median :0.05805    \n Mean   :0.17468   Mean   :0.115270      Mean   :0.12542    \n 3rd Qu.:0.24769   3rd Qu.:0.128205      3rd Qu.:0.13621    \n Max.   :1.00000   Max.   :1.000000      Max.   :1.00000    \n 2021 Fishing farm   2021 Others(*)      2022 Total      2022 Cultivation farm\n Min.   :0.0000000   Min.   :0.00000   Min.   :0.00000   Min.   :0.000000     \n 1st Qu.:0.0008224   1st Qu.:0.00000   1st Qu.:0.04577   1st Qu.:0.003363     \n Median :0.0164474   Median :0.01942   Median :0.13484   Median :0.024664     \n Mean   :0.0734388   Mean   :0.10726   Mean   :0.18806   Mean   :0.112232     \n 3rd Qu.:0.0649671   3rd Qu.:0.08738   3rd Qu.:0.26698   3rd Qu.:0.128924     \n Max.   :1.0000000   Max.   :1.00000   Max.   :1.00000   Max.   :1.000000     \n 2022 Livestock farm 2022 Fishing farm   2022 Others(*)      2023 Total     \n Min.   :0.00000     Min.   :0.0000000   Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.01655     1st Qu.:0.0008013   1st Qu.:0.00000   1st Qu.:0.04781  \n Median :0.05936     Median :0.0144231   Median :0.01923   Median :0.14446  \n Mean   :0.12760     Mean   :0.0747863   Mean   :0.11355   Mean   :0.20134  \n 3rd Qu.:0.13955     3rd Qu.:0.0817308   3rd Qu.:0.10096   3rd Qu.:0.31027  \n Max.   :1.00000     Max.   :1.0000000   Max.   :1.00000   Max.   :1.00000  \n 2023 Cultivation farm 2023 Livestock farm 2023 Fishing farm 2023 Others(*)   \n Min.   :0.000000      Min.   :0.00000     Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.002711      1st Qu.:0.01599     1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.021692      Median :0.05540     Median :0.01329   Median :0.03509  \n Mean   :0.122646      Mean   :0.12727     Mean   :0.06952   Mean   :0.11278  \n 3rd Qu.:0.119306      3rd Qu.:0.14991     3rd Qu.:0.08272   3rd Qu.:0.09211  \n Max.   :1.000000      Max.   :1.00000     Max.   :1.00000   Max.   :1.00000  \n 2012 Cultivation PR 2012 Livestock PR 2012 Fishing PR   2012 Others PR   \n Min.   :0.000000    Min.   :0.0000    Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.003592    1st Qu.:0.1262    1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.058139    Median :0.4783    Median :0.04912   Median :0.03667  \n Mean   :0.276857    Mean   :0.4694    Mean   :0.15451   Mean   :0.16009  \n 3rd Qu.:0.539111    3rd Qu.:0.7819    3rd Qu.:0.16923   3rd Qu.:0.16954  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.00000   Max.   :1.00000  \n 2013 Cultivation PR 2013 Livestock PR 2013 Fishing PR   2013 Others PR   \n Min.   :0.0000000   Min.   :0.0000    Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.0007692   1st Qu.:0.1637    1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.0437956   Median :0.4576    Median :0.05271   Median :0.02632  \n Mean   :0.2720218   Mean   :0.4843    Mean   :0.13529   Mean   :0.15630  \n 3rd Qu.:0.5211864   3rd Qu.:0.8117    3rd Qu.:0.14261   3rd Qu.:0.22118  \n Max.   :1.0000000   Max.   :1.0000    Max.   :1.00000   Max.   :1.00000  \n 2014 Cultivation PR 2014 Livestock PR 2014 Fishing PR   2014 Others PR    \n Min.   :0.000000    Min.   :0.0000    Min.   :0.00000   Min.   :0.000000  \n 1st Qu.:0.001281    1st Qu.:0.2084    1st Qu.:0.00000   1st Qu.:0.003282  \n Median :0.063622    Median :0.5771    Median :0.04351   Median :0.038228  \n Mean   :0.282096    Mean   :0.5405    Mean   :0.13291   Mean   :0.144265  \n 3rd Qu.:0.547042    3rd Qu.:0.8709    3rd Qu.:0.11597   3rd Qu.:0.187017  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.00000   Max.   :1.000000  \n 2015 Cultivation PR 2015 Livestock PR 2015 Fishing PR   2015 Others PR    \n Min.   :0.000000    Min.   :0.0000    Min.   :0.00000   Min.   :0.000000  \n 1st Qu.:0.001255    1st Qu.:0.2749    1st Qu.:0.00000   1st Qu.:0.005116  \n Median :0.065970    Median :0.6338    Median :0.03843   Median :0.055556  \n Mean   :0.272500    Mean   :0.5600    Mean   :0.12213   Mean   :0.187827  \n 3rd Qu.:0.481251    3rd Qu.:0.8722    3rd Qu.:0.09858   3rd Qu.:0.261364  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.00000   Max.   :1.000000  \n 2016 Cultivation PR 2016 Livestock PR 2016 Fishing PR    2016 Others PR    \n Min.   :0.000000    Min.   :0.0000    Min.   :0.000000   Min.   :0.000000  \n 1st Qu.:0.005843    1st Qu.:0.2901    1st Qu.:0.004281   1st Qu.:0.002937  \n Median :0.068469    Median :0.7162    Median :0.032834   Median :0.021423  \n Mean   :0.249853    Mean   :0.6012    Mean   :0.110272   Mean   :0.071175  \n 3rd Qu.:0.463326    3rd Qu.:0.8927    3rd Qu.:0.110687   3rd Qu.:0.074641  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.000000   Max.   :1.000000  \n 2017 Cultivation PR 2017 Livestock PR 2017 Fishing PR    2017 Others PR   \n Min.   :0.00000     Min.   :0.0000    Min.   :0.000000   Min.   :0.00000  \n 1st Qu.:0.00378     1st Qu.:0.2829    1st Qu.:0.004268   1st Qu.:0.00000  \n Median :0.06756     Median :0.7049    Median :0.031480   Median :0.01382  \n Mean   :0.25321     Mean   :0.5882    Mean   :0.116152   Mean   :0.08881  \n 3rd Qu.:0.48539     3rd Qu.:0.8948    3rd Qu.:0.091937   3rd Qu.:0.06693  \n Max.   :1.00000     Max.   :1.0000    Max.   :1.000000   Max.   :1.00000  \n 2018 Cultivation PR 2018 Livestock PR 2018 Fishing PR    2018 Others PR   \n Min.   :0.000000    Min.   :0.0000    Min.   :0.000000   Min.   :0.00000  \n 1st Qu.:0.004927    1st Qu.:0.3234    1st Qu.:0.005248   1st Qu.:0.00000  \n Median :0.072482    Median :0.6965    Median :0.030015   Median :0.01476  \n Mean   :0.241739    Mean   :0.5927    Mean   :0.107518   Mean   :0.10894  \n 3rd Qu.:0.441395    3rd Qu.:0.8863    3rd Qu.:0.097035   3rd Qu.:0.08908  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.000000   Max.   :1.00000  \n 2019 Cultivation PR 2019 Livestock PR 2019 Fishing PR    2019 Others PR   \n Min.   :0.000000    Min.   :0.0000    Min.   :0.000000   Min.   :0.00000  \n 1st Qu.:0.003145    1st Qu.:0.3374    1st Qu.:0.003824   1st Qu.:0.00000  \n Median :0.063750    Median :0.6910    Median :0.028498   Median :0.01432  \n Mean   :0.238869    Mean   :0.5989    Mean   :0.105171   Mean   :0.11263  \n 3rd Qu.:0.438990    3rd Qu.:0.8786    3rd Qu.:0.092836   3rd Qu.:0.08735  \n Max.   :1.000000    Max.   :1.0000    Max.   :1.000000   Max.   :1.00000  \n 2020 Cultivation PR 2020 Livestock PR 2020 Fishing PR   2020 Others PR   \n Min.   :0.00000     Min.   :0.0000    Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.01447     1st Qu.:0.2644    1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.08328     Median :0.6348    Median :0.04222   Median :0.05104  \n Mean   :0.25842     Mean   :0.5523    Mean   :0.13689   Mean   :0.17761  \n 3rd Qu.:0.50470     3rd Qu.:0.8064    3rd Qu.:0.11884   3rd Qu.:0.25183  \n Max.   :1.00000     Max.   :1.0000    Max.   :1.00000   Max.   :1.00000  \n 2021 Cultivation PR 2021 Livestock PR 2021 Fishing PR     2021 Others PR   \n Min.   :0.00000     Min.   :0.0000    Min.   :0.0000000   Min.   :0.00000  \n 1st Qu.:0.01811     1st Qu.:0.3058    1st Qu.:0.0006245   1st Qu.:0.00000  \n Median :0.08292     Median :0.6286    Median :0.0407631   Median :0.03155  \n Mean   :0.25446     Mean   :0.5479    Mean   :0.1353759   Mean   :0.16091  \n 3rd Qu.:0.47135     3rd Qu.:0.7966    3rd Qu.:0.1324030   3rd Qu.:0.19928  \n Max.   :1.00000     Max.   :1.0000    Max.   :1.0000000   Max.   :1.00000  \n 2022 Cultivation PR 2022 Livestock PR 2022 Fishing PR     2022 Others PR   \n Min.   :0.00000     Min.   :0.0000    Min.   :0.0000000   Min.   :0.00000  \n 1st Qu.:0.02144     1st Qu.:0.3252    1st Qu.:0.0006252   1st Qu.:0.00000  \n Median :0.08465     Median :0.6341    Median :0.0414502   Median :0.01538  \n Mean   :0.24510     Mean   :0.5506    Mean   :0.1352420   Mean   :0.11489  \n 3rd Qu.:0.42178     3rd Qu.:0.8138    3rd Qu.:0.1155287   3rd Qu.:0.13504  \n Max.   :1.00000     Max.   :1.0000    Max.   :1.0000000   Max.   :1.00000  \n 2023 Cultivation PR 2023 Livestock PR 2023 Fishing PR   2023 Others PR   \n Min.   :0.00000     Min.   :0.0000    Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.01848     1st Qu.:0.3333    1st Qu.:0.00000   1st Qu.:0.00000  \n Median :0.08225     Median :0.5835    Median :0.04273   Median :0.02492  \n Mean   :0.25285     Mean   :0.5407    Mean   :0.13393   Mean   :0.12645  \n 3rd Qu.:0.50624     3rd Qu.:0.8336    3rd Qu.:0.12952   3rd Qu.:0.13201  \n Max.   :1.00000     Max.   :1.0000    Max.   :1.00000   Max.   :1.00000  \n```\n\n\n:::\n:::\n\n\n\nApplying Min-Max standardization scales the data to a range of 0 to 1, making it easier to compare variables with different units or ranges. The summary provides insights into how variables are rescaled. In Shiny, this standardization option will allow users to toggle between raw and normalized data views to understand how scaling affects the data distribution.\n\n### **Z-score standardisation**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvietnam_farm.z <- scale(vietnam_farm_ict)\ndescribe(vietnam_farm.z)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                      vars  n mean sd median trimmed  mad   min  max range\n2012 Total               1 63    0  1  -0.39   -0.20 0.36 -0.65 5.83  6.47\n2012 Cultivation farm    2 63    0  1  -0.49   -0.24 0.03 -0.51 4.17  4.68\n2012 Livestock farm      3 63    0  1  -0.43   -0.20 0.25 -0.61 4.92  5.53\n2012 Fishing farm        4 63    0  1  -0.17   -0.16 0.04 -0.20 7.72  7.92\n2012 Others(*)           5 63    0  1  -0.34   -0.26 0.08 -0.40 4.90  5.29\n2013 Total               6 63    0  1  -0.30   -0.19 0.54 -0.68 5.71  6.39\n2013 Cultivation farm    7 63    0  1  -0.50   -0.24 0.03 -0.52 3.99  4.51\n2013 Livestock farm      8 63    0  1  -0.43   -0.20 0.27 -0.63 5.07  5.69\n2013 Fishing farm        9 63    0  1  -0.18   -0.16 0.04 -0.20 7.72  7.92\n2013 Others(*)          10 63    0  1  -0.39   -0.25 0.12 -0.47 4.58  5.05\n2014 Total              11 63    0  1  -0.24   -0.19 0.65 -0.72 5.14  5.86\n2014 Cultivation farm   12 63    0  1  -0.54   -0.22 0.05 -0.57 3.31  3.88\n2014 Livestock farm     13 63    0  1  -0.38   -0.19 0.28 -0.59 5.61  6.20\n2014 Fishing farm       14 63    0  1  -0.18   -0.15 0.03 -0.20 7.74  7.94\n2014 Others(*)          15 63    0  1  -0.35   -0.23 0.14 -0.44 5.57  6.01\n2015 Total              16 63    0  1  -0.28   -0.19 0.64 -0.76 4.24  5.00\n2015 Cultivation farm   17 63    0  1  -0.53   -0.22 0.05 -0.57 3.28  3.84\n2015 Livestock farm     18 63    0  1  -0.38   -0.19 0.25 -0.57 5.55  6.12\n2015 Fishing farm       19 63    0  1  -0.19   -0.16 0.03 -0.22 7.70  7.91\n2015 Others(*)          20 63    0  1  -0.37   -0.23 0.13 -0.46 5.73  6.20\n2016 Total              21 63    0  1  -0.32   -0.16 0.63 -0.80 4.94  5.73\n2016 Cultivation farm   22 63    0  1  -0.48   -0.25 0.07 -0.53 3.59  4.12\n2016 Livestock farm     23 63    0  1  -0.37   -0.21 0.26 -0.56 5.18  5.74\n2016 Fishing farm       24 63    0  1  -0.41   -0.25 0.19 -0.54 4.34  4.88\n2016 Others(*)          25 63    0  1  -0.23   -0.18 0.11 -0.30 7.46  7.77\n2017 Total              26 63    0  1  -0.30   -0.15 0.68 -0.81 4.96  5.77\n2017 Cultivation farm   27 63    0  1  -0.50   -0.25 0.06 -0.54 3.66  4.20\n2017 Livestock farm     28 63    0  1  -0.38   -0.21 0.26 -0.57 5.17  5.74\n2017 Fishing farm       29 63    0  1  -0.39   -0.25 0.21 -0.53 3.77  4.31\n2017 Others(*)          30 63    0  1  -0.26   -0.20 0.07 -0.31 7.30  7.62\n2018 Total              31 63    0  1  -0.25   -0.15 0.74 -0.84 4.61  5.45\n2018 Cultivation farm   32 63    0  1  -0.50   -0.24 0.06 -0.54 3.84  4.39\n2018 Livestock farm     33 63    0  1  -0.36   -0.19 0.32 -0.60 4.85  5.45\n2018 Fishing farm       34 63    0  1  -0.42   -0.25 0.17 -0.53 4.47  5.00\n2018 Others(*)          35 63    0  1  -0.26   -0.22 0.10 -0.32 7.05  7.37\n2019 Total              36 63    0  1  -0.19   -0.16 0.76 -0.82 4.64  5.46\n2019 Cultivation farm   37 63    0  1  -0.50   -0.24 0.07 -0.55 3.94  4.49\n2019 Livestock farm     38 63    0  1  -0.35   -0.20 0.34 -0.60 4.91  5.51\n2019 Fishing farm       39 63    0  1  -0.42   -0.25 0.17 -0.54 4.49  5.02\n2019 Others(*)          40 63    0  1  -0.27   -0.22 0.10 -0.33 6.90  7.23\n2020 Total              41 63    0  1  -0.27   -0.16 0.71 -0.89 4.75  5.64\n2020 Cultivation farm   42 63    0  1  -0.44   -0.24 0.14 -0.54 4.09  4.63\n2020 Livestock farm     43 63    0  1  -0.39   -0.21 0.37 -0.66 4.61  5.27\n2020 Fishing farm       44 63    0  1  -0.39   -0.23 0.15 -0.50 5.69  6.19\n2020 Others(*)          45 63    0  1  -0.43   -0.26 0.17 -0.55 4.61  5.16\n2021 Total              46 63    0  1  -0.30   -0.16 0.70 -0.92 4.34  5.26\n2021 Cultivation farm   47 63    0  1  -0.45   -0.24 0.16 -0.56 4.29  4.85\n2021 Livestock farm     48 63    0  1  -0.36   -0.21 0.37 -0.66 4.63  5.29\n2021 Fishing farm       49 63    0  1  -0.37   -0.23 0.16 -0.47 5.97  6.44\n2021 Others(*)          50 63    0  1  -0.42   -0.26 0.14 -0.52 4.30  4.81\n2022 Total              51 63    0  1  -0.27   -0.15 0.75 -0.94 4.07  5.01\n2022 Cultivation farm   52 63    0  1  -0.44   -0.24 0.17 -0.56 4.41  4.97\n2022 Livestock farm     53 63    0  1  -0.37   -0.20 0.41 -0.69 4.69  5.38\n2022 Fishing farm       54 63    0  1  -0.39   -0.23 0.14 -0.49 6.01  6.50\n2022 Others(*)          55 63    0  1  -0.44   -0.25 0.13 -0.53 4.17  4.70\n2023 Total              56 63    0  1  -0.27   -0.15 0.76 -0.97 3.84  4.81\n2023 Cultivation farm   57 63    0  1  -0.45   -0.24 0.14 -0.55 3.93  4.48\n2023 Livestock farm     58 63    0  1  -0.40   -0.20 0.39 -0.70 4.81  5.51\n2023 Fishing farm       59 63    0  1  -0.38   -0.22 0.13 -0.47 6.30  6.77\n2023 Others(*)          60 63    0  1  -0.40   -0.24 0.26 -0.57 4.52  5.09\n2012 Cultivation PR     61 63    0  1  -0.62   -0.14 0.25 -0.79 2.06  2.85\n2012 Livestock PR       62 63    0  1   0.03   -0.01 1.40 -1.38 1.57  2.95\n2012 Fishing PR         63 63    0  1  -0.42   -0.25 0.29 -0.62 3.39  4.01\n2012 Others PR          64 63    0  1  -0.46   -0.23 0.20 -0.59 3.12  3.71\n2013 Cultivation PR     65 63    0  1  -0.65   -0.14 0.19 -0.78 2.09  2.87\n2013 Livestock PR       66 63    0  1  -0.08   -0.01 1.50 -1.42 1.51  2.93\n2013 Fishing PR         67 63    0  1  -0.36   -0.25 0.34 -0.59 3.80  4.39\n2013 Others PR          68 63    0  1  -0.54   -0.21 0.16 -0.64 3.48  4.13\n2014 Cultivation PR     69 63    0  1  -0.61   -0.13 0.26 -0.79 2.02  2.81\n2014 Livestock PR       70 63    0  1   0.11    0.03 1.39 -1.60 1.36  2.96\n2014 Fishing PR         71 63    0  1  -0.39   -0.26 0.28 -0.59 3.82  4.41\n2014 Others PR          72 63    0  1  -0.48   -0.23 0.26 -0.65 3.86  4.51\n2015 Cultivation PR     73 63    0  1  -0.59   -0.15 0.28 -0.78 2.07  2.84\n2015 Livestock PR       74 63    0  1   0.22    0.04 1.17 -1.67 1.32  2.99\n2015 Fishing PR         75 63    0  1  -0.39   -0.25 0.27 -0.57 4.09  4.66\n2015 Others PR          76 63    0  1  -0.50   -0.20 0.31 -0.71 3.05  3.76\n2016 Cultivation PR     77 63    0  1  -0.55   -0.16 0.31 -0.75 2.26  3.01\n2016 Livestock PR       78 63    0  1   0.34    0.06 1.08 -1.79 1.18  2.97\n2016 Fishing PR         79 63    0  1  -0.41   -0.24 0.26 -0.58 4.70  5.29\n2016 Others PR          80 63    0  1  -0.33   -0.23 0.21 -0.47 6.11  6.58\n2017 Cultivation PR     81 63    0  1  -0.54   -0.16 0.29 -0.74 2.19  2.93\n2017 Livestock PR       82 63    0  1   0.35    0.06 1.08 -1.76 1.23  2.99\n2017 Fishing PR         83 63    0  1  -0.41   -0.25 0.23 -0.57 4.31  4.88\n2017 Others PR          84 63    0  1  -0.40   -0.24 0.11 -0.48 4.92  5.40\n2018 Cultivation PR     85 63    0  1  -0.51   -0.16 0.33 -0.73 2.30  3.04\n2018 Livestock PR       86 63    0  1   0.32    0.06 1.14 -1.84 1.26  3.10\n2018 Fishing PR         87 63    0  1  -0.40   -0.26 0.23 -0.55 4.56  5.10\n2018 Others PR          88 63    0  1  -0.44   -0.25 0.10 -0.51 4.19  4.70\n2019 Cultivation PR     89 63    0  1  -0.52   -0.17 0.28 -0.71 2.27  2.99\n2019 Livestock PR       90 63    0  1   0.29    0.06 1.09 -1.86 1.25  3.11\n2019 Fishing PR         91 63    0  1  -0.40   -0.26 0.22 -0.55 4.66  5.20\n2019 Others PR          92 63    0  1  -0.45   -0.26 0.10 -0.51 4.05  4.57\n2020 Cultivation PR     93 63    0  1  -0.55   -0.15 0.39 -0.81 2.33  3.14\n2020 Livestock PR       94 63    0  1   0.26    0.05 1.16 -1.72 1.39  3.11\n2020 Fishing PR         95 63    0  1  -0.39   -0.25 0.26 -0.57 3.59  4.15\n2020 Others PR          96 63    0  1  -0.47   -0.21 0.28 -0.66 3.04  3.70\n2021 Cultivation PR     97 63    0  1  -0.57   -0.14 0.41 -0.84 2.47  3.32\n2021 Livestock PR       98 63    0  1   0.26    0.05 1.10 -1.77 1.46  3.24\n2021 Fishing PR         99 63    0  1  -0.40   -0.25 0.26 -0.57 3.65  4.22\n2021 Others PR         100 63    0  1  -0.51   -0.22 0.18 -0.63 3.30  3.93\n2022 Cultivation PR    101 63    0  1  -0.54   -0.16 0.42 -0.82 2.53  3.35\n2022 Livestock PR      102 63    0  1   0.27    0.05 1.06 -1.75 1.43  3.19\n2022 Fishing PR        103 63    0  1  -0.40   -0.25 0.26 -0.57 3.67  4.24\n2022 Others PR         104 63    0  1  -0.49   -0.23 0.11 -0.56 4.34  4.91\n2023 Cultivation PR    105 63    0  1  -0.55   -0.15 0.39 -0.82 2.41  3.23\n2023 Livestock PR      106 63    0  1   0.14    0.04 1.18 -1.72 1.46  3.18\n2023 Fishing PR        107 63    0  1  -0.39   -0.25 0.27 -0.57 3.71  4.28\n2023 Others PR         108 63    0  1  -0.45   -0.25 0.16 -0.56 3.88  4.44\n                       skew kurtosis   se\n2012 Total             3.48    16.15 0.13\n2012 Cultivation farm  2.24     4.73 0.13\n2012 Livestock farm    2.85     9.72 0.13\n2012 Fishing farm      7.31    53.39 0.13\n2012 Others(*)         3.61    13.14 0.13\n2013 Total             3.33    14.90 0.13\n2013 Cultivation farm  2.14     4.07 0.13\n2013 Livestock farm    2.85    10.01 0.13\n2013 Fishing farm      7.30    53.31 0.13\n2013 Others(*)         3.18    10.06 0.13\n2014 Total             2.95    11.00 0.13\n2014 Cultivation farm  1.71     1.74 0.13\n2014 Livestock farm    3.46    14.92 0.13\n2014 Fishing farm      7.36    54.01 0.13\n2014 Others(*)         3.99    17.28 0.13\n2015 Total             2.55     7.57 0.13\n2015 Cultivation farm  1.77     2.07 0.13\n2015 Livestock farm    3.63    15.57 0.13\n2015 Fishing farm      7.24    52.70 0.13\n2015 Others(*)         3.97    17.71 0.13\n2016 Total             2.88    10.67 0.13\n2016 Cultivation farm  2.17     3.98 0.13\n2016 Livestock farm    3.57    14.32 0.13\n2016 Fishing farm      2.57     6.34 0.13\n2016 Others(*)         6.63    46.30 0.13\n2017 Total             2.86    10.67 0.13\n2017 Cultivation farm  2.09     3.54 0.13\n2017 Livestock farm    3.48    13.76 0.13\n2017 Fishing farm      2.45     5.36 0.13\n2017 Others(*)         6.26    42.30 0.13\n2018 Total             2.77     9.81 0.13\n2018 Cultivation farm  2.18     4.17 0.13\n2018 Livestock farm    3.46    13.50 0.13\n2018 Fishing farm      2.62     6.77 0.13\n2018 Others(*)         5.75    36.55 0.13\n2019 Total             2.87    10.38 0.13\n2019 Cultivation farm  2.26     4.74 0.13\n2019 Livestock farm    3.45    13.46 0.13\n2019 Fishing farm      2.62     6.77 0.13\n2019 Others(*)         5.47    33.47 0.13\n2020 Total             2.52     8.44 0.13\n2020 Cultivation farm  2.57     6.39 0.13\n2020 Livestock farm    2.79     8.88 0.13\n2020 Fishing farm      3.56    15.29 0.13\n2020 Others(*)         2.63     7.11 0.13\n2021 Total             2.20     6.29 0.13\n2021 Cultivation farm  2.52     6.54 0.13\n2021 Livestock farm    2.77     8.75 0.13\n2021 Fishing farm      3.89    18.35 0.13\n2021 Others(*)         2.72     7.39 0.13\n2022 Total             2.07     5.58 0.13\n2022 Cultivation farm  2.57     6.87 0.13\n2022 Livestock farm    2.58     7.78 0.13\n2022 Fishing farm      3.92    18.85 0.13\n2022 Others(*)         2.67     7.12 0.13\n2023 Total             1.68     3.26 0.13\n2023 Cultivation farm  2.30     4.72 0.13\n2023 Livestock farm    2.47     7.40 0.13\n2023 Fishing farm      4.32    22.77 0.13\n2023 Others(*)         2.53     6.69 0.13\n2012 Cultivation PR    0.93    -0.73 0.13\n2012 Livestock PR      0.03    -1.47 0.13\n2012 Fishing PR        2.03     3.14 0.13\n2012 Others PR         1.90     2.43 0.13\n2013 Cultivation PR    0.92    -0.73 0.13\n2013 Livestock PR      0.01    -1.47 0.13\n2013 Fishing PR        2.21     4.18 0.13\n2013 Others PR         1.69     1.99 0.13\n2014 Cultivation PR    0.89    -0.81 0.13\n2014 Livestock PR     -0.21    -1.47 0.13\n2014 Fishing PR        2.27     4.36 0.13\n2014 Others PR         2.00     3.49 0.13\n2015 Cultivation PR    1.00    -0.52 0.13\n2015 Livestock PR     -0.30    -1.38 0.13\n2015 Fishing PR        2.34     5.04 0.13\n2015 Others PR         1.59     1.61 0.13\n2016 Cultivation PR    1.09    -0.37 0.13\n2016 Livestock PR     -0.47    -1.31 0.13\n2016 Fishing PR        2.61     7.29 0.13\n2016 Others PR         4.15    20.58 0.13\n2017 Cultivation PR    1.10    -0.38 0.13\n2017 Livestock PR     -0.41    -1.36 0.13\n2017 Fishing PR        2.39     5.45 0.13\n2017 Others PR         3.12    10.55 0.13\n2018 Cultivation PR    1.16    -0.24 0.13\n2018 Livestock PR     -0.40    -1.28 0.13\n2018 Fishing PR        2.65     6.94 0.13\n2018 Others PR         2.52     6.05 0.13\n2019 Cultivation PR    1.18    -0.22 0.13\n2019 Livestock PR     -0.44    -1.25 0.13\n2019 Fishing PR        2.69     7.41 0.13\n2019 Others PR         2.43     5.37 0.13\n2020 Cultivation PR    1.01    -0.47 0.13\n2020 Livestock PR     -0.44    -1.22 0.13\n2020 Fishing PR        2.32     4.62 0.13\n2020 Others PR         1.64     1.58 0.13\n2021 Cultivation PR    1.00    -0.44 0.13\n2021 Livestock PR     -0.41    -1.14 0.13\n2021 Fishing PR        2.40     5.03 0.13\n2021 Others PR         1.86     2.61 0.13\n2022 Cultivation PR    1.11    -0.12 0.13\n2022 Livestock PR     -0.41    -1.15 0.13\n2022 Fishing PR        2.39     5.02 0.13\n2022 Others PR         2.38     5.85 0.13\n2023 Cultivation PR    1.04    -0.38 0.13\n2023 Livestock PR     -0.29    -1.21 0.13\n2023 Fishing PR        2.34     4.82 0.13\n2023 Others PR         2.26     4.50 0.13\n```\n\n\n:::\n:::\n\n\n\nZ-score standardization adjusts each variable to have a mean of 0 and a standard deviation of 1. This method is useful for comparing variables on a common scale without the influence of original units. In Shiny, users will be able to view data using this standardization method, making it easier to detect outliers or extreme values across farm types.\n\n### **Visualising the standardised clustering variables**\n\nTo provide users with a complete understanding of the raw and standardized values, I plan to incorporate the options \"type of farm,\" \"year,\" and \"selection\" (histogram or density) into the Shiny UI.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr <- ggplot(data = vietnam_farm_ict, \n            aes(x = `2012 Cultivation PR`)) +\n  geom_histogram(bins = 20, \n                 color = \"black\", \n                 fill = \"light blue\") +\n  ggtitle(\"Raw Values (without Standardization)\")\n\nvietnam_farm_std_df <- as.data.frame(vietnam_farm.std)\n\ns <- ggplot(data = vietnam_farm_std_df, \n            aes(x = `2012 Cultivation PR`)) +\n  geom_histogram(bins = 20, \n                 color = \"black\", \n                 fill = \"light blue\") +\n  ggtitle(\"Min-Max Standardization\")\n\nvietnam_farm_z_df <- as.data.frame(vietnam_farm.z)\n\nz <- ggplot(data = vietnam_farm_z_df, \n            aes(x = `2012 Cultivation PR`)) +\n  geom_histogram(bins = 20, \n                 color = \"black\", \n                 fill = \"light blue\") +\n  ggtitle(\"Z-score Standardization\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-Home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}