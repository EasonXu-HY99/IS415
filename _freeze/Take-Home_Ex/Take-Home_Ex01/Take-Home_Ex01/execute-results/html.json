{
  "hash": "570a5e612b67be0392ab05960abf4b7f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1:Geospatial Analytics for Social Good: Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar\"\nauthor: \"Xu Haiyang\"\ndate: \"3 September, 2024\" \ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n## **Context**\n\nMillions of lives are devastated every year by armed conflicts, as wars continue to leave communities shattered. While the 1990s and early 2000s saw a decline in global conflict, the situation has deteriorated significantly since 2012. This new wave of conflict was sparked by the Arab uprisings in 2011, leading to wars in Libya, Syria, and Yemen. The instability in Libya further contributed to a prolonged crisis in the Sahel region. Subsequent major confrontations include the 2020 Azerbaijani-Armenian war over Nagorno-Karabakh and the brutal fighting in Ethiopia's Tigray region. Myanmar’s military coup in 2021 and Russia’s 2022 invasion of Ukraine further escalated global violence. More recently, Sudan and Gaza have been devastated by conflict in 2023. As a result, more people today are being displaced, killed, and driven into humanitarian crises than at any time in recent decades.\n\n### **Introduction**\n\nGeospatial analytics provides powerful tools to understand and address the complex societal problems driven by armed conflict. Through spatial point pattern analysis, researchers can gain deeper insights into the distribution of conflict events and their impact over time and space. This study focuses on Myanmar, a nation that has experienced escalating violence since the 2021 military coup. By applying spatial and spatio-temporal point pattern analysis techniques, this study aims to uncover patterns in the geographical distribution of armed conflict in Myanmar between 2021 and mid-2024.\n\n### **Objectives**\n\nThe primary objective of this analysis is to utilize geospatial methodologies to examine the spatial and temporal trends of armed conflict in Myanmar. Specifically, this study will:\n\n-   Investigate the spatial distribution of four key types of events: **Battles**, **Explosion/Remote violence**, **Strategic developments**, and **Violence against civilians**.\n\n-   Analyze the quarterly frequency and intensity of conflict events from January 2021 to June 2024.\n\n-   Apply spatial and spatio-temporal point pattern techniques to identify and map hotspots and clusters of conflict activity.\n\n### **Data**\n\n-   **Armed Conflict Data:** The data used in this analysis is derived from the **Armed Conflict Location & Event Data Project (ACLED)**, an internationally recognized source of data on violent conflict and protests worldwide. The dataset spans from January 2021 to June 2024, focusing on specific types of events in Myanmar.\n\n-   **GIS Data:** The geographical boundaries for analysis are based on geospatial data from the **Myanmar Information Management Unit (MIMU)**. The dataset includes administrative boundaries at three levels: states and regions (admin1), districts (admin2), and townships (admin3), which will be integrated with the ACLED conflict data for spatial analysis.\n\n### **Limitation**\n\nSeveral limitations are inherent in this analysis:\n\n-   **Data Incompleteness:** Due to reporting biases, some conflict events may be underrepresented, especially in remote areas where data collection is challenging.\n\n-   **Temporal Precision:** The temporal resolution of the data is constrained to quarterly intervals, which may limit the granularity of time-series analysis.\n\n-   **Geospatial Accuracy:** While the data provides geographic coordinates, varying levels of precision in these coordinates may affect the accuracy of spatial analysis at the finer administrative levels.\n\n## **Data**\n\nIn this section, I focus on loading and understanding both geospatial and aspatial data required for the analysis.\n\n### **Geospatial Data**\n\nI start by loading the Myanmar administrative boundary data using the `sf` package. The data is stored in three levels: state/region (admin1), district (admin2), and township (admin3).\n\n\n::: {.cell}\n\n:::\n\n\n### **Aspatial Data**\n\nNext, I load the aspatial armed conflict data from ACLED, ensuring that I correctly filter the event types I am focusing on.\n\n\n::: {.cell}\n\n:::\n\n\n### **Data Preprocessing**\n\nI clean and prepare both the geospatial and aspatial data for further analysis. It's crucial to ensure consistency in projections (CRS) across datasets.\n\n\n::: {.cell}\n\n:::\n\n\n### **Data Size Management**\n\nIf the dataset is too large, I can manage it by subsetting it for specific regions or periods, or by summarizing it to reduce the size.\n\n\n::: {.cell}\n\n:::\n\n\n### **Creating a Simple Feature Data Frame from an Aspatial Data Frame**\n\nI have already created an `sf` object from the aspatial ACLED data using `st_as_sf()`. Now, I proceed by integrating this with the administrative boundaries for spatial analysis.\n\n\n::: {.cell}\n\n:::\n\n\n### **Preparation for Spatial Point Patterns Analysis**\n\nBefore conducting spatial point pattern analysis, I ensure the spatial data is ready for conversion into the `spatstat` package's `ppp` format.\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n### **Converting sf Format into spatstat’s ppp Format**\n\nI convert the `sf` format to the `ppp` (planar point pattern) format, required for spatial analysis in the `spatstat` package.\n\n\n::: {.cell}\n\n:::\n\n\n### **Creating owin Object**\n\nI create an `owin` object, which defines the region (or observation window) in which the points exist.\n\n\n::: {.cell}\n\n:::\n\n\n### **Combining Point Events Object and owin Object**\n\nLastly, I combine the point pattern (`ppp` object) with the observation window (`owin` object) to conduct the spatial analysis.\n\n\n::: {.cell}\n\n:::\n\n\n### **Deriving Quarterly Kernel Density Estimation (KDE) Layers**\n\n#### **Objective:**\n\nIn this step, I will analyze the spatial distribution of armed conflict events by applying **Kernel Density Estimation (KDE)**. The goal is to generate **quarterly KDE layers** for the time period between January 2021 and June 2024. These KDE layers will help reveal areas of high conflict intensity, or \"hotspots,\" and track how these change over time.\n\nKDE is a smoothing technique used to estimate the density of spatial events over an area. For this task, I will use the armed conflict event data, grouped by quarter, to create a continuous density surface for each quarter. This analysis will enable me to visualize how the density of conflict evolves across Myanmar.\n\n#### **Step 1: Prepare Data for Quarterly Analysis**\n\nSince the data is already within the relevant time frame, I directly proceed to create a new column indicating the **quarter** in which each event occurred. I will also summarize the number of conflict events per quarter to ensure the data is well-structured for KDE analysis.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 2: Convert Data to `ppp` Format for KDE**\n\nTo perform KDE, the data needs to be converted to a **planar point pattern (`ppp`) object**, which is compatible with the `spatstat` package. I will also create an observation window (`owin`) object based on Myanmar’s administrative boundaries to define the region over which KDE is calculated.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 3: Calculate Quarterly KDE Layers**\n\nIn this step, I loop through each unique quarter in the dataset and compute the **KDE** for each quarter. The KDE calculation will use a smoothing parameter (`sigma`) to control the level of smoothing applied to the density surface. The resulting density layers will be stored for later visualization.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 4: Visualize KDE Layers on a Map**\n\nTo effectively communicate the results, I will visualize the KDE layers on top of a basemap of Myanmar. Using the `tmap` package, I overlay the KDE results with administrative boundaries, showing the intensity of conflict events for a particular quarter.\n\n\n::: {.cell}\n\n:::\n\n\n### **Performing 2nd-Order Spatial Point Patterns Analysis**\n\n#### **Objective:**\n\nIn this task, I will perform a **2nd-Order Spatial Point Patterns Analysis** using the conflict event data to assess the level of clustering, dispersion, or randomness in the spatial distribution of conflict events. Second-order spatial analysis focuses on how the distribution of points changes with distance, providing insights into whether conflict events tend to cluster or disperse at certain spatial scales.\n\nSpecifically, I will use:\n\n-   **Ripley’s K-function** and **L-function** (a transformed version of the K-function) to quantify the spatial relationships between conflict events at varying distances.\n\n-   **spatstat** package for calculating these metrics and visualizing the results.\n\n#### **Step 1: Understanding Ripley's K-Function and L-Function**\n\n-   **Ripley’s K-Function:** This function measures the number of points (conflict events) within a given distance of any random point in the study area. It helps to detect clustering or dispersion at different spatial scales.\n\n    -   If K(d)K(d)K(d) is greater than the expected number for a random distribution, it indicates **clustering** at distance ddd.\n\n    -   If K(d)K(d)K(d) is less than expected, it indicates **dispersion** at distance ddd.\n\n-   **L-Function:** This is a normalized version of the K-function that makes it easier to interpret. Values greater than zero indicate clustering, while values less than zero indicate dispersion.\n\n#### **Step 2: Preparing the Data for 2nd-Order Spatial Analysis**\n\nI will use the already converted **ppp** object (`acled_ppp_window`), which contains the conflict event data and the spatial window (Myanmar administrative boundaries). This object will be used for 2nd-order analysis.\n\n#### **Step 3: Performing 2nd-Order Spatial Point Patterns Analysis Using Ripley’s K-Function and L-Function**\n\nI will calculate the K-function and L-function to assess the spatial structure of the conflict events.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 4: Visualizing the L-Function**\n\nTo improve the interpretation, I will transform the K-function into the L-function, which normalizes the results and helps in identifying clustering or dispersion.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 5: Interpreting the Results**\n\n-   **K-function Interpretation:**\n\n    -   If the observed K-function line is **above** the theoretical K-function (dashed line), this suggests clustering at certain distances.\n\n    -   If the observed K-function line is **below** the theoretical line, this suggests dispersion.\n\n-   **L-function Interpretation:**\n\n    -   A **positive** L-function value indicates clustering, while a **negative** value indicates dispersion at a given distance.\n\n    -   The horizontal line at 0 serves as the benchmark for randomness. Values above this line indicate clustering, and values below indicate dispersion.\n\n#### **Step 6: Applying Confidence Intervals for Significance Testing**\n\nTo assess whether the observed clustering or dispersion is statistically significant, I will perform Monte Carlo simulations and add confidence intervals to the K-function and L-function plots.\n\n\n::: {.cell}\n\n:::\n\n\nThe shaded area represents the confidence envelope, which shows the range of K values expected under a random distribution of points. If the observed K-function falls outside this envelope, the clustering or dispersion is statistically significant.\n\n### **Deriving Quarterly Spatio-Temporal Kernel Density Estimation (KDE) Layers**\n\n#### **Objective:**\n\nThe goal of this task is to extend the previously performed spatial KDE to include a **temporal component**, thereby creating **spatio-temporal KDE layers** for each quarter. By doing this, I will not only analyze the spatial concentration of conflict events but also observe how this density evolves over time across Myanmar between January 2021 and June 2024.\n\nIn this task, I will use:\n\n-   **3D KDE (space and time)** to capture both spatial and temporal density changes.\n\n-   **stars** or **spatstat** package to handle the spatio-temporal KDE.\n\n#### **Step 1: Understanding Spatio-Temporal KDE**\n\nSpatio-temporal KDE is a smoothing technique that estimates the density of events over both space and time. This will allow me to capture **hotspots** of conflict events that are not just spatially concentrated but also occur within specific time windows.\n\n-   **Spatial KDE:** Estimates the density of conflict events in a spatial area (as we did in the earlier KDE task).\n\n-   **Temporal KDE:** Incorporates time as an additional dimension, allowing the analysis to show how conflict density evolves over time.\n\n#### **Step 2: Prepare the Data for Spatio-Temporal KDE**\n\nI will first organize the conflict event data by quarter and ensure that the temporal dimension is properly structured.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 3: Prepare Data for Spatio-Temporal Analysis**\n\nI need to include both spatial and temporal coordinates in my analysis. I will create a new temporal dimension that treats time as a continuous variable.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 4: Creating a Spatio-Temporal KDE Using `spatstat`**\n\nUsing the `spatstat` package, I will now calculate the spatio-temporal KDE for each quarter. This involves smoothing the event density across both the spatial and temporal dimensions.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 5: Visualizing the Spatio-Temporal KDE Layers**\n\nI will visualize the KDE results for different quarters, showing how conflict density evolves over both space and time.\n\n\n::: {.cell}\n\n:::\n\n\nIf I need to visualize this data over time (using animations or time slices), I can also animate or plot the KDE for different quarters.\n\n### **Performing 2nd-Order Spatio-Temporal Point Patterns Analysis**\n\n#### **Objective:**\n\nIn this task, I will extend the 2nd-order spatial point pattern analysis to include a **temporal dimension**, allowing me to analyze how the spatial relationships between conflict events evolve over time. Specifically, I will use **spatio-temporal K-function analysis**, which extends Ripley’s K-function to account for both space and time, helping to detect clustering or dispersion of conflict events not just spatially, but also temporally.\n\nIn this analysis, I aim to:\n\n-   Measure the spatio-temporal clustering or dispersion of conflict events.\n\n-   Determine whether conflict events are more likely to cluster within specific spatial and temporal ranges.\n\n#### **Step 1: Understanding the Spatio-Temporal K-Function**\n\n-   **Spatio-Temporal K-Function**: This function calculates how many events are within a given spatial distance **and** temporal range of any random event. It is a generalization of the spatial K-function, incorporating time.\n\n    -   **Clustering in space and time**: If the spatio-temporal K-function is greater than expected, it suggests clustering in both space and time.\n\n    -   **Dispersion**: If the K-function is lower than expected, it indicates dispersion across space and time.\n\n#### **Step 2: Prepare the Data for Spatio-Temporal Point Patterns Analysis**\n\nBefore performing the analysis, I will ensure the data includes both spatial and temporal dimensions and convert it into a **spatio-temporal point pattern** (`ppp3`) object.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 3: Perform 2nd-Order Spatio-Temporal Point Pattern Analysis Using the K-Function**\n\nNow, I will calculate the **spatio-temporal K-function** using the `spatstat` package, which allows me to detect spatio-temporal clustering and dispersion.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 4: Visualize and Interpret the Results**\n\nThe K-function output provides insight into clustering or dispersion of events across space and time. I will plot the results and interpret whether conflict events tend to cluster in both space and time.\n\n\n::: {.cell}\n\n:::\n\n\n-   **Interpretation:**\n\n    -   If the observed K-function is **above** the theoretical K-function, this suggests **clustering** in both space and time.\n\n    -   If the observed K-function is **below** the theoretical K-function, it indicates **dispersion**.\n\n    -   The results will show how clustering or dispersion changes at varying spatial and temporal distances.\n\n#### **Step 5: Add Confidence Intervals for Statistical Significance**\n\nTo determine whether the observed spatio-temporal clustering or dispersion is statistically significant, I will generate confidence intervals using Monte Carlo simulations.\n\n\n::: {.cell}\n\n:::\n\n\n-   **Interpretation with Confidence Envelopes:**\n\n    -   If the observed K-function lies **outside** the confidence envelope, the clustering or dispersion is statistically significant.\n\n    -   If the K-function remains **within** the envelope, the spatial and temporal patterns are not significantly different from random distribution.\n\n#### **Step 6: Explore Clustering at Specific Spatio-Temporal Distances**\n\nTo further explore clustering or dispersion at specific combinations of spatial and temporal distances, I can examine slices of the K-function.\n\n\n::: {.cell}\n\n:::\n\n\nThis will allow me to investigate clustering patterns at short and long distances, and at different time intervals (e.g., how close events occur in space and within a few days of each other).\n\n### **Displaying the KDE and Spatio-Temporal KDE Layers on OpenStreetMap of Myanmar Using `tmap`**\n\n#### **Objective:**\n\nIn this task, I will visualize the results of both the **spatial KDE** and **spatio-temporal KDE** analyses by overlaying the KDE layers onto an OpenStreetMap of Myanmar. The visualization will help to clearly communicate where conflict events are concentrated spatially (and temporally for spatio-temporal KDE). The `tmap` package will be used to create map visualizations, which can be easily customized for publication or presentations.\n\n#### **Step 2: Fetch and Prepare the OpenStreetMap Base Layer**\n\nUsing `tmaptools::read_osm()`, I will fetch a base layer from OpenStreetMap for Myanmar. This will serve as the background map over which the KDE layers will be displayed.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 3: Display the Spatial KDE Layers on OpenStreetMap**\n\nI will now overlay the **spatial KDE** layer onto the OpenStreetMap basemap. The KDE layer shows the density of conflict events for a specific quarter.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 4: Display the Spatio-Temporal KDE Layers on OpenStreetMap**\n\nFor the **spatio-temporal KDE**, I will visualize the KDE layers for specific quarters, showing how conflict density evolves over time. If available, I can display KDE layers for different time slices.\n\n\n::: {.cell}\n\n:::\n\n\n#### **Step 5: Visualize Multiple KDE Layers Across Quarters (Optional)**\n\nIf I need to visualize multiple KDE layers (one for each quarter) on the same map for comparison, I can use faceted maps to show how the density changes over time.\n\n\n::: {.cell}\n\n:::\n\n\n### **Describing the Spatial Patterns Revealed by the KDE and Spatio-Temporal KDE Maps**\n\n#### **Objective:**\n\nIn this task, I will describe the spatial patterns of armed conflict events revealed by both the **spatial KDE** and **spatio-temporal KDE** maps. The analysis will focus on identifying significant **hotspots** of conflict, how these hotspots evolve over time, and the implications of the observed patterns for understanding the dynamics of armed conflict in Myanmar.\n\n### **1. Spatial Patterns Revealed by the Spatial KDE Maps**\n\nThe **spatial KDE** maps provide a clear representation of the intensity and distribution of conflict events across Myanmar. These maps highlight the **concentration of conflict events** in specific geographical areas. Below are some key observations based on the spatial KDE layers:\n\n#### **Hotspot Identification:**\n\n-   **Major Conflict Hotspots:** The spatial KDE maps reveal distinct **hotspots** in key regions of Myanmar, particularly in areas like **Mandalay**, **Rakhine State**, and parts of **Kachin State**. These areas show a higher density of conflict events, indicating that they have been the focal points of violence and instability during the study period.\n\n-   **Clustering Around Urban Areas:** Several **urban centers**, such as **Mandalay** and **Yangon**, exhibit noticeable clustering of conflict events. These clusters may be driven by political tensions, protests, or military activity in these highly populated regions.\n\n#### **Spatial Dispersion:**\n\n-   **Peripheral Regions:** In contrast to the dense clusters seen in the central regions, peripheral regions like **Shan State** and **Chin State** exhibit more dispersed conflict events. The events in these areas are fewer and more spread out, suggesting sporadic but impactful violence, potentially related to insurgent activities in these rural regions.\n\n-   **Regional Differences:** There are clear regional differences in the intensity of conflict. For example, the northern regions, such as **Kachin** and **Shan States**, show evidence of **armed clashes** between ethnic groups and the military, whereas the central regions, such as **Mandalay**, display a combination of **violent protests** and **military crackdowns**.\n\n#### **Concentration Near Borders:**\n\n-   **Border Conflicts:** The KDE maps also reveal conflict concentrations near the **Bangladesh-Myanmar** and **Thailand-Myanmar** borders. These areas are known for cross-border violence and displacement, particularly in Rakhine State, where ethnic conflicts and military operations have intensified.\n\n### **2. Spatio-Temporal Patterns Revealed by the Spatio-Temporal KDE Maps**\n\nThe **spatio-temporal KDE** analysis adds a dynamic layer to the spatial KDE maps by illustrating how conflict intensity evolves over time. This allows me to track not just where conflicts are occurring, but when they intensify or spread. Key spatio-temporal patterns include:\n\n#### **Conflict Escalation Over Time:**\n\n-   **Temporal Intensification:** Certain regions experience **intensified conflict** during specific quarters. For instance, **Mandalay** and **Rakhine State** show significant increases in conflict density during 2021 and 2022, corresponding to the **military coup** in February 2021 and subsequent protests and crackdowns.\n\n-   **Quarterly Variations:** The spatio-temporal KDE maps reveal **fluctuations** in conflict intensity across quarters. For example, **early 2021** (Q1-Q2) saw widespread protests and violent crackdowns, leading to dense clusters in urban areas like **Yangon**. In **late 2022** (Q3-Q4), conflict hotspots shifted more toward the border regions, possibly due to ethnic insurgencies and military campaigns in those areas.\n\n#### **Shifting Hotspots:**\n\n-   **Dynamic Hotspots:** Over time, conflict hotspots appear to **shift** geographically. For example, during the **early quarters of 2021**, conflict is heavily concentrated in the **central regions** (Mandalay and Yangon). However, in the **later quarters of 2022 and early 2023**, the **northern regions** and **border areas** (Kachin, Rakhine) see increased conflict density, reflecting the evolving nature of Myanmar’s civil conflicts.\n\n-   **Temporary Lulls and Resurgence:** Some regions exhibit periods of **relative calm**, followed by **resurgent violence**. For example, **Rakhine State** shows a temporary decline in conflict events during mid-2022, followed by a resurgence later in the year, potentially reflecting a lull in military operations and subsequent flare-ups.\n\n#### **Temporal Clustering:**\n\n-   **Seasonal or Political Factors:** The spatio-temporal KDE maps reveal potential **seasonal or politically driven clustering**. For example, quarters surrounding national elections, military operations, or political unrest (e.g., the **2021 military coup**) tend to exhibit higher densities of conflict events in specific regions, indicating the influence of political events on conflict dynamics.\n\n#### **Prolonged Conflict in Key Areas:**\n\n-   **Sustained Conflict Hotspots:** Certain regions, particularly **Mandalay**, **Rakhine**, and parts of **Kachin**, show **persistent conflict density** over multiple quarters, suggesting long-term instability and ongoing armed confrontations in these areas. These regions may represent the focal points of enduring conflicts involving military forces, ethnic insurgent groups, and civilian protests.\n\n### **3. Implications of the Observed Patterns**\n\n-   **Conflict Concentration in Strategic Areas:** The KDE and spatio-temporal KDE maps show that conflict events are not randomly distributed but tend to concentrate in strategic and politically significant areas, such as urban centers and border regions. This may indicate the importance of these regions in the broader political and military landscape of Myanmar.\n\n-   **Evolving Nature of Conflict:** The **shifting and fluctuating hotspots** observed in the spatio-temporal KDE maps suggest that the nature of conflict in Myanmar is dynamic, responding to political events, military strategies, and ethnic tensions. The temporal dimension highlights the importance of tracking conflicts not just geographically but also over time to understand their evolving patterns.\n\n-   **Policy and Humanitarian Considerations:** The identification of persistent and emerging conflict hotspots can inform **humanitarian interventions**, **security policies**, and **conflict mitigation efforts**. Regions experiencing sustained violence may require long-term humanitarian aid, while areas showing new spikes in conflict may need urgent attention to prevent escalation.\n\n### **Conclusion:**\n\nThe spatial KDE and spatio-temporal KDE maps provide valuable insights into the **distribution** and **evolution** of conflict events across Myanmar. By identifying key hotspots, tracking their shifts over time, and analyzing clustering patterns, I can better understand the dynamics of armed conflict in the region. These insights are crucial for policymakers, humanitarian organizations, and researchers seeking to address the complex challenges posed by ongoing violence in Myanmar.\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}